<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\STM32F429.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\STM32F429.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Feb 27 16:46:54 2019
<BR><P>
<H3>Maximum Stack Usage =       1840 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
GUIDEMO_ImageFlow &rArr; _GetImages &rArr; GUI_JPEG_Draw &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[60]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">ADC_IRQHandler</a><BR>
 <LI><a href="#[53f]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53f]">WM__InvalidateRect</a><BR>
 <LI><a href="#[554]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[554]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[551]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[551]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[25d]">WM__SendMessage</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[226]">WM_DefaultProc</a><BR>
 <LI><a href="#[542]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[542]">WM__ForEachDesc</a><BR>
 <LI><a href="#[570]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[570]">_MoveDescendents</a><BR>
 <LI><a href="#[276]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52c]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[578]">_EnlargeBlocks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[346]">_Alloc</a><BR>
 <LI><a href="#[56c]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56c]">_Findy1</a><BR>
 <LI><a href="#[56e]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56e]">_Findx1</a><BR>
 <LI><a href="#[56d]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56d]">_Findx0</a><BR>
 <LI><a href="#[543]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[543]">_GetDialogItem</a><BR>
 <LI><a href="#[53e]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2fd]">WM_DeleteWindow</a><BR>
 <LI><a href="#[571]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[571]">_PaintTransChildren</a><BR>
 <LI><a href="#[553]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[553]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[563]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[563]">_Screen2hWin</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[60]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ad]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[147]">BUTTON_CreateIndirect</a> from button.o(i.BUTTON_CreateIndirect) referenced 2 times from guidemo.o(.constdata)
 <LI><a href="#[25]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced 2 times from button.o(.data)
 <LI><a href="#[25]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[48]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8e]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8f]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[90]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8d]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9d]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e0]">CUSTOM_LCD_CopyBuffer</a> from guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_CopyBuffer) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e1]">CUSTOM_LCD_CopyRect</a> from guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_CopyRect) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[b0]">CUSTOM_LCD_FillRect</a> from guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_FillRect) referenced from guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_FillRect)
 <LI><a href="#[b0]">CUSTOM_LCD_FillRect</a> from guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_FillRect) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e6]">Color2IndexBulk_M1555IDMA2D</a> from guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M1555IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[ea]">Color2IndexBulk_M4444IDMA2D</a> from guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M4444IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e8]">Color2IndexBulk_M565DMA2D</a> from guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M565DMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[ee]">Color2IndexBulk_M8888IDMA2D</a> from guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M8888IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[ec]">Color2IndexBulk_M888DMA2D</a> from guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M888DMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[9c]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">DMA1_Stream2_IRQHandler</a> from stm32f429i_discovery_i2c_ee.o(i.DMA1_Stream2_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">DMA1_Stream4_IRQHandler</a> from stm32f429i_discovery_i2c_ee.o(i.DMA1_Stream4_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7d]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a8]">DMA2D_IRQHandler</a> from stm32f4xx_it.o(i.DMA2D_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[86]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[87]">DMA2_Stream1_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[88]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8a]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[92]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[93]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[94]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ef]">DMA_AlphaBlending</a> from guidrv_stm32f429i_discovery.o(i.DMA_AlphaBlending) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[f1]">DMA_MixColors</a> from guidrv_stm32f429i_discovery.o(i.DMA_MixColors) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[4b]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8b]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8c]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7e]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9f]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[b1]">FRAMEWIN_Callback</a> from framewin.o(i.FRAMEWIN_Callback) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[146]">FRAMEWIN_CreateIndirect</a> from framewin.o(i.FRAMEWIN_CreateIndirect) referenced 3 times from guidemo.o(.constdata)
 <LI><a href="#[29]">FRAMEWIN_DrawSkinFlex</a> from framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex) referenced 4 times from framewin.o(.data)
 <LI><a href="#[28]">FRAMEWIN__GetBorderSize</a> from framewin.o(i.FRAMEWIN__GetBorderSize) referenced 2 times from framewin.o(.data)
 <LI><a href="#[b2]">FRAMEWIN__cbClient</a> from framewin.o(i.FRAMEWIN__cbClient) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[b3]">GRAPH_Callback</a> from graph.o(i.GRAPH_Callback) referenced from graph.o(i.GRAPH_CreateUser)
 <LI><a href="#[b]">GUIDEMO_AntialiasedText</a> from guidemo_antialiasedtext.o(i.GUIDEMO_AntialiasedText) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[8]">GUIDEMO_BarGraph</a> from guidemo_bargraph.o(i.GUIDEMO_BarGraph) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[a]">GUIDEMO_Bitmap</a> from guidemo_bitmap.o(i.GUIDEMO_Bitmap) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[14]">GUIDEMO_ColorBar</a> from guidemo_colorbar.o(i.GUIDEMO_ColorBar) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[13]">GUIDEMO_Cursor</a> from guidemo_cursor.o(i.GUIDEMO_Cursor) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[9]">GUIDEMO_Fading</a> from guidemo_fading.o(i.GUIDEMO_Fading) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[11]">GUIDEMO_Graph</a> from guidemo_graph.o(i.GUIDEMO_Graph) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[d]">GUIDEMO_IconView</a> from guidemo_iconview.o(i.GUIDEMO_IconView) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[e]">GUIDEMO_ImageFlow</a> from guidemo_imageflow.o(i.GUIDEMO_ImageFlow) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[10]">GUIDEMO_Listview</a> from guidemo_listview.o(i.GUIDEMO_Listview) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[7]">GUIDEMO_RadialMenu</a> from guidemo_radialmenu.o(i.GUIDEMO_RadialMenu) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[12]">GUIDEMO_Speed</a> from guidemo_speed.o(i.GUIDEMO_Speed) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[f]">GUIDEMO_Treeview</a> from guidemo_treeview.o(i.GUIDEMO_Treeview) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[c]">GUIDEMO_WashingMachine</a> from guidemo_washingmachine.o(i.GUIDEMO_WashingMachine) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[6]">GUIDEMO_ZoomAndRotate</a> from guidemo_zoomandrotate.o(i.GUIDEMO_ZoomAndRotate) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[1f4]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[1f5]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[1f6]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[1f7]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[15b]">GUIPROP_AA2_EXT_DispChar</a> from guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar) referenced from guidemo_resource.o(.constdata)
 <LI><a href="#[14a]">GUIPROP_AA4_DispChar</a> from guiaa_char4.o(i.GUIPROP_AA4_DispChar) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[156]">GUIPROP_AA4_EXT_DispChar</a> from guiaa_char4ext.o(i.GUIPROP_AA4_EXT_DispChar) referenced 4 times from guidemo_resource.o(.constdata)
 <LI><a href="#[14b]">GUIPROP_AA4_GetCharDistX</a> from guiaa_char4.o(i.GUIPROP_AA4_GetCharDistX) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[14c]">GUIPROP_AA4_GetFontInfo</a> from guiaa_char4.o(i.GUIPROP_AA4_GetFontInfo) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[14d]">GUIPROP_AA4_IsInFont</a> from guiaa_char4.o(i.GUIPROP_AA4_IsInFont) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[152]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[157]">GUIPROP_EXT_GetCharDistX</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharDistX) referenced 5 times from guidemo_resource.o(.constdata)
 <LI><a href="#[15a]">GUIPROP_EXT_GetCharInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharInfo) referenced 5 times from guidemo_resource.o(.constdata)
 <LI><a href="#[158]">GUIPROP_EXT_GetFontInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetFontInfo) referenced 5 times from guidemo_resource.o(.constdata)
 <LI><a href="#[159]">GUIPROP_EXT_IsInFont</a> from gui_charpext.o(i.GUIPROP_EXT_IsInFont) referenced 5 times from guidemo_resource.o(.constdata)
 <LI><a href="#[21]">GUIPROP_EXT__ClearLine</a> from gui_encext.o(i.GUIPROP_EXT__ClearLine) referenced 2 times from gui_encext.o(.data)
 <LI><a href="#[193]">GUIPROP_EXT__DispLine</a> from gui_encext.o(i.GUIPROP_EXT__DispLine) referenced from gui_encext.o(.constdata)
 <LI><a href="#[153]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[154]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[155]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[c1]">GUI_BMP__GetData</a> from gui_bmp.o(i.GUI_BMP__GetData) referenced from gui_bmp.o(i.GUI_BMP_Draw)
 <LI><a href="#[fa]">GUI_DrawGradientH</a> from gui_drawgradient.o(i.GUI_DrawGradientH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[fd]">GUI_DrawGradientV</a> from gui_drawgradient.o(i.GUI_DrawGradientV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[c6]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_DrawSub)
 <LI><a href="#[c6]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetImageInfo)
 <LI><a href="#[c6]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetInfo)
 <LI><a href="#[ca]">GUI_JPEG__GetData</a> from gui_jpeg.o(i.GUI_JPEG__GetData) referenced from gui_jpeg.o(i.GUI_JPEG_Draw)
 <LI><a href="#[ca]">GUI_JPEG__GetData</a> from gui_jpeg.o(i.GUI_JPEG__GetData) referenced from gui_jpeg.o(i.GUI_JPEG_GetInfo)
 <LI><a href="#[23]">GUI_MEMDEV_CopyToLCD</a> from guidev.o(i.GUI_MEMDEV_CopyToLCD) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[10a]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i.WM__PaintWinAndOverlays)
 <LI><a href="#[10a]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._PaintTransChildren)
 <LI><a href="#[13c]">GUI_MEMDEV_Rotate</a> from guidev_rotate.o(i.GUI_MEMDEV_Rotate) referenced from guidemo_zoomandrotate.o(i._RotateAndZoomImage)
 <LI><a href="#[13c]">GUI_MEMDEV_Rotate</a> from guidev_rotate.o(i.GUI_MEMDEV_Rotate) referenced 2 times from guidemo_zoomandrotate.o(i._ShiftImage)
 <LI><a href="#[13d]">GUI_MEMDEV_RotateHQ</a> from guidev_rotate.o(i.GUI_MEMDEV_RotateHQ) referenced from guidemo_zoomandrotate.o(i._ShiftImage)
 <LI><a href="#[22]">GUI_MEMDEV_Write</a> from guidev_write.o(i.GUI_MEMDEV_Write) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[134]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[397]">GUI_SetAlpha</a> from gui_setalpha.o(i.GUI_SetAlpha) referenced from gui_setalpha.o(i.GUI_SetAlpha)
 <LI><a href="#[d5]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[1f9]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1f8]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1fa]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1fc]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[3c]">GUI_X_ExecIdle</a> from gui_x_os.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[18]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[19]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[9e]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[d9]">HEADER_Callback</a> from header.o(i.HEADER_Callback) referenced from header.o(i.HEADER_CreateUser)
 <LI><a href="#[2d]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced 2 times from header.o(.data)
 <LI><a href="#[2d]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[46]">HardFault_Handler</a> from context_rvds.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[97]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[96]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[dd]">ICONVIEW_Callback</a> from iconview.o(i.ICONVIEW_Callback) referenced from iconview.o(i.ICONVIEW_CreateUser)
 <LI><a href="#[de]">ICONVIEW_OwnerDraw</a> from iconview.o(i.ICONVIEW_OwnerDraw) referenced from iconview.o(i.ICONVIEW_CreateUser)
 <LI><a href="#[db]">ICONVIEW__DrawText</a> from iconview.o(i.ICONVIEW__DrawText) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[3d]">LCD_AA_MixColors16</a> from lcd_aa.o(i.LCD_AA_MixColors16) referenced 2 times from lcd_aa.o(.data)
 <LI><a href="#[162]">LCD_Color2Index_8666</a> from guicc_8666.o(i.LCD_Color2Index_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[e3]">LCD_DrawBitmap16bpp</a> from guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap16bpp) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e4]">LCD_DrawBitmap32bpp</a> from guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap32bpp) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e2]">LCD_DrawBitmap8bpp</a> from guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap8bpp) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[c4]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[c4]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[179]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[c3]">LCD_DrawVLine</a> from lcd.o(i.LCD_DrawVLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientH)
 <LI><a href="#[1f]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[118]">LCD_Index2Color_444_12</a> from guicc_444_12_index2color.o(i.LCD_Index2Color_444_12) referenced from gui_drawbitmap_444.o(.constdata)
 <LI><a href="#[118]">LCD_Index2Color_444_12</a> from guicc_444_12_index2color.o(i.LCD_Index2Color_444_12) referenced from gui_drawbitmap_444.o(i._DrawBitmap444_12)
 <LI><a href="#[117]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced 2 times from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[117]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_565.o(i._DrawBitmap)
 <LI><a href="#[163]">LCD_Index2Color_8666</a> from guicc_8666.o(i.LCD_Index2Color_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[d7]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced 2 times from gui_drawbitmap_24.o(.constdata)
 <LI><a href="#[d7]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced 2 times from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from lcd_rlealpha.o(i._Draw)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui_drawbitmap_8888.o(i._DrawBitmap_8888)
 <LI><a href="#[d0]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from lcd_rlealpha.o(i._DrawClip)
 <LI><a href="#[111]">LCD_Index2Color_M555</a> from guicc_m555_index2color.o(i.LCD_Index2Color_M555) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[1ba]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[1bf]">LCD_Index2Color_M888</a> from guicc_m888_index2color.o(i.LCD_Index2Color_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[175]">LCD_Index2Color_M8888I</a> from guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[f2]">LCD_MixColorsBulk</a> from guidrv_stm32f429i_discovery.o(i.LCD_MixColorsBulk) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[11e]">LCD_SetPixelAA4_Trans</a> from lcd_aa.o(i.LCD_SetPixelAA4_Trans) referenced from guiaa_lib.o(i._FlushLine)
 <LI><a href="#[f3]">LISTVIEW_Callback</a> from listview.o(i.LISTVIEW_Callback) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[151]">LISTVIEW_CompareDec</a> from listview_setsort.o(i.LISTVIEW_CompareDec) referenced from guidemo_listview.o(.constdata)
 <LI><a href="#[150]">LISTVIEW_CompareText</a> from listview_setsort.o(i.LISTVIEW_CompareText) referenced 2 times from guidemo_listview.o(.constdata)
 <LI><a href="#[f4]">LISTVIEW_OwnerDraw</a> from listview.o(i.LISTVIEW_OwnerDraw) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[a7]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a6]">LTDC_IRQHandler</a> from stm32f4xx_it.o(i.LTDC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[91]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[99]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[98]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9b]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9a]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f7]">PROGBAR_Callback</a> from progbar.o(i.PROGBAR_Callback) referenced from progbar.o(i.PROGBAR_CreateUser)
 <LI><a href="#[148]">PROGBAR_CreateIndirect</a> from progbar.o(i.PROGBAR_CreateIndirect) referenced from guidemo.o(.constdata)
 <LI><a href="#[30]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced 2 times from progbar.o(.data)
 <LI><a href="#[30]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[4f]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">PendSV_Handler</a> from context_rvds.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a5]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f8]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[42]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced 2 times from scrollbar.o(.data)
 <LI><a href="#[42]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[7f]">SDIO_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ab]">SDRAM_Init</a> from sdram.o(i.SDRAM_Init) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[43]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced 2 times from slider.o(.data)
 <LI><a href="#[43]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[71]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[81]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a2]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a3]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a4]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">SysTick_Handler</a> from board.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[aa]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[50]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ff]">TEXT_Callback</a> from text.o(i.TEXT_Callback) referenced from text.o(i.TEXT_CreateUser)
 <LI><a href="#[149]">TEXT_CreateIndirect</a> from text.o(i.TEXT_CreateIndirect) referenced 2 times from guidemo.o(.constdata)
 <LI><a href="#[66]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[80]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[84]">TIM6_DAC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[85]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7b]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7a]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[100]">TREEVIEW_Callback</a> from treeview.o(i.TREEVIEW_Callback) referenced from treeview.o(i.TREEVIEW_CreateIndirect)
 <LI><a href="#[15c]">TREEVIEW_CreateIndirect</a> from treeview.o(i.TREEVIEW_CreateIndirect) referenced from guidemo_treeview.o(.constdata)
 <LI><a href="#[101]">TREEVIEW_OwnerDraw</a> from treeview.o(i.TREEVIEW_OwnerDraw) referenced from treeview.o(i.TREEVIEW_CreateIndirect)
 <LI><a href="#[142]">Thread1</a> from main.o(i.Thread1) referenced from main.o(i.main)
 <LI><a href="#[143]">Thread2</a> from main.o(i.Thread2) referenced from main.o(i.main)
 <LI><a href="#[82]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[83]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a0]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a1]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">USART1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[95]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[d3]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[109]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i.WM__PaintWinAndOverlays)
 <LI><a href="#[109]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._PaintTransChildren)
 <LI><a href="#[4e]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15]">_AddData_Heartbeat</a> from guidemo_graph.o(i._AddData_Heartbeat) referenced 2 times from guidemo_graph.o(.data)
 <LI><a href="#[16]">_AddData_Sine</a> from guidemo_graph.o(i._AddData_Sine) referenced 2 times from guidemo_graph.o(.data)
 <LI><a href="#[10c]">_CalcPositions</a> from scrollbar_skin.o(i._CalcPositions) referenced from scrollbar_skin.o(i._Create)
 <LI><a href="#[1eb]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(i._CalcSizeOfChar) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[c7]">_ClearUnusedPixels</a> from gui_gif.o(i._ClearUnusedPixels) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[17f]">_Color2Index</a> from gui_enablealpha.o(i._Color2Index) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[182]">_Color2IndexBulk</a> from gui_enablealpha.o(i._Color2IndexBulk) referenced 7 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[160]">_Color2IndexBulk_1616I</a> from guicc_1616i.o(i._Color2IndexBulk_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[168]">_Color2IndexBulk_88666I</a> from guicc_88666i.o(i._Color2IndexBulk_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[16d]">_Color2IndexBulk_M1555I</a> from guicc_m1555i.o(i._Color2IndexBulk_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[172]">_Color2IndexBulk_M4444I</a> from guicc_m4444i.o(i._Color2IndexBulk_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[177]">_Color2IndexBulk_M8888I</a> from guicc_m8888i.o(i._Color2IndexBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[1ed]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[1e6]">_Color2Index_16</a> from guicc_16.o(i._Color2Index_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[15d]">_Color2Index_1616I</a> from guicc_1616i.o(i._Color2Index_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[1f0]">_Color2Index_565</a> from guicc_565.o(i._Color2Index_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[165]">_Color2Index_88666I</a> from guicc_88666i.o(i._Color2Index_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[1b1]">_Color2Index_888</a> from guicc_888.o(i._Color2Index_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[1b5]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[16a]">_Color2Index_M1555I</a> from guicc_m1555i.o(i._Color2Index_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[16f]">_Color2Index_M4444I</a> from guicc_m4444i.o(i._Color2Index_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[1b9]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[1be]">_Color2Index_M888</a> from guicc_m888.o(i._Color2Index_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[174]">_Color2Index_M8888I</a> from guicc_m8888i.o(i._Color2Index_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[130]">_CopyBuffer</a> from guidrv_lin_32.o(i._CopyBuffer) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[27]">_Create</a> from button_skin.o(i._Create) referenced 12 times from button_skin.o(.data)
 <LI><a href="#[ce]">_DecodeBlockAC_First</a> from gui_jpeg.o(i._DecodeBlockAC_First) referenced from gui_jpeg.o(i.GUI_JPEG__InitDraw)
 <LI><a href="#[116]">_DecodeBlockAC_FirstBanding</a> from gui_jpeg.o(i._DecodeBlockAC_FirstBanding) referenced from gui_jpeg.o(i._Draw)
 <LI><a href="#[cd]">_DecodeBlockAC_Refine</a> from gui_jpeg.o(i._DecodeBlockAC_Refine) referenced from gui_jpeg.o(i.GUI_JPEG__InitDraw)
 <LI><a href="#[115]">_DecodeBlockAC_RefineBanding</a> from gui_jpeg.o(i._DecodeBlockAC_RefineBanding) referenced from gui_jpeg.o(i._Draw)
 <LI><a href="#[cb]">_DecodeBlockDC_First</a> from gui_jpeg.o(i._DecodeBlockDC_First) referenced from gui_jpeg.o(i.GUI_JPEG__InitDraw)
 <LI><a href="#[113]">_DecodeBlockDC_FirstBanding</a> from gui_jpeg.o(i._DecodeBlockDC_FirstBanding) referenced from gui_jpeg.o(i._Draw)
 <LI><a href="#[cc]">_DecodeBlockDC_Refine</a> from gui_jpeg.o(i._DecodeBlockDC_Refine) referenced from gui_jpeg.o(i.GUI_JPEG__InitDraw)
 <LI><a href="#[114]">_DecodeBlockDC_RefineBanding</a> from gui_jpeg.o(i._DecodeBlockDC_RefineBanding) referenced from gui_jpeg.o(i._Draw)
 <LI><a href="#[11a]">_Draw</a> from lcd_rlealpha.o(i._Draw) referenced from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
 <LI><a href="#[fc]">_DrawBackgroundH</a> from scrollbar_skinflex.o(i._DrawBackgroundH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[f9]">_DrawBackgroundV</a> from scrollbar_skinflex.o(i._DrawBackgroundV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[17a]">_DrawBitmap</a> from gui_drawbitmap_24.o(i._DrawBitmap) referenced 7 times from gui_drawbitmap_24.o(.constdata)
 <LI><a href="#[da]">_DrawBitmap</a> from iconview.o(i._DrawBitmap) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[17b]">_DrawBitmap444_12</a> from gui_drawbitmap_444.o(i._DrawBitmap444_12) referenced from gui_drawbitmap_444.o(.constdata)
 <LI><a href="#[17e]">_DrawBitmapHW_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmapHW_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[17d]">_DrawBitmap_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmap_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[1c6]">_DrawBitmap_RLE8</a> from lcd_rle8.o(i._DrawBitmap_RLE8) referenced from lcd_rle8.o(.constdata)
 <LI><a href="#[1c7]">_DrawBitmap_RLEAlpha</a> from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha) referenced from lcd_rlealpha.o(.constdata)
 <LI><a href="#[bc]">_DrawBk</a> from guidemo.o(i._DrawBk) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[bb]">_DrawBkCircle</a> from guidemo.o(i._DrawBkCircle) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[bd]">_DrawBkSimple</a> from guidemo.o(i._DrawBkSimple) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[17]">_DrawCharAA4_Trans</a> from guiaa_char4.o(i._DrawCharAA4_Trans) referenced 2 times from guiaa_char4.o(.data)
 <LI><a href="#[11b]">_DrawClip</a> from lcd_rlealpha.o(i._DrawClip) referenced from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
 <LI><a href="#[1e2]">_DrawDown</a> from widget_effect_simple.o(i._DrawDown) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[1e3]">_DrawDownRect</a> from widget_effect_simple.o(i._DrawDownRect) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[201]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[c8]">_DrawFromDataBlock</a> from gui_gif.o(i._DrawFromDataBlock) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[fe]">_DrawGraspH</a> from scrollbar_skinflex.o(i._DrawGraspH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[fb]">_DrawGraspV</a> from scrollbar_skinflex.o(i._DrawGraspV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[185]">_DrawHLine</a> from gui_enablealpha.o(i._DrawHLine) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[c0]">_DrawHLine</a> from guiaa_lib.o(i._DrawHLine) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[1a]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[1a]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced 2 times from gui_bmp.o(i._Draw)
 <LI><a href="#[1a]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._DrawBitmap_RGB)
 <LI><a href="#[4]">_DrawScreenAlphaBitmaps</a> from guidemo_bitmap.o(i._DrawScreenAlphaBitmaps) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[5]">_DrawScreenGrayScale</a> from guidemo_bitmap.o(i._DrawScreenGrayScale) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[3]">_DrawScreenHighColor</a> from guidemo_bitmap.o(i._DrawScreenHighColor) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[1]">_DrawScreenPaletteBasedBitmaps</a> from guidemo_bitmap.o(i._DrawScreenPaletteBasedBitmaps) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[2]">_DrawScreen_BMP_GIF_JPG</a> from guidemo_bitmap.o(i._DrawScreen_BMP_GIF_JPG) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[1e0]">_DrawUp</a> from widget_effect_simple.o(i._DrawUp) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[1e1]">_DrawUpRect</a> from widget_effect_simple.o(i._DrawUpRect) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[186]">_DrawVLine</a> from gui_enablealpha.o(i._DrawVLine) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[1ec]">_Encode</a> from gui_uc_encodenone.o(i._Encode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[187]">_FillRect</a> from gui_enablealpha.o(i._FillRect) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[ba]">_FrameDrawSkinFlex</a> from guidemo.o(i._FrameDrawSkinFlex) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[f5]">_Free</a> from listview_setsort.o(i._Free) referenced from listview_setsort.o(i.LISTVIEW_EnableSort)
 <LI><a href="#[f5]">_Free</a> from listview_setsort.o(i._Free) referenced from listview_setsort.o(i.LISTVIEW_SetSort)
 <LI><a href="#[1fb]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[2a]">_GetBorderSize</a> from framewin_skin.o(i._GetBorderSize) referenced 2 times from framewin_skin.o(.data)
 <LI><a href="#[119]">_GetByte_pPixel</a> from lcd_rle8.o(i._GetByte_pPixel) referenced from lcd_rle8.o(i._DrawBitmap_RLE8)
 <LI><a href="#[1e9]">_GetCharCode</a> from gui_uc_encodenone.o(i._GetCharCode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[1ea]">_GetCharSize</a> from gui_uc_encodenone.o(i._GetCharSize) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[3a]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[18e]">_GetDevData</a> from gui_enablealpha.o(i._GetDevData) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[18c]">_GetDevFunc</a> from gui_enablealpha.o(i._GetDevFunc) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[18d]">_GetDevProp</a> from gui_enablealpha.o(i._GetDevProp) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[dc]">_GetImageSizes</a> from iconview.o(i._GetImageSizes) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[181]">_GetIndexMask</a> from gui_enablealpha.o(i._GetIndexMask) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[1ef]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[1e8]">_GetIndexMask_16</a> from guicc_16.o(i._GetIndexMask_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[15f]">_GetIndexMask_1616I</a> from guicc_1616i.o(i._GetIndexMask_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[1f1]">_GetIndexMask_565</a> from guicc_565.o(i._GetIndexMask_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[164]">_GetIndexMask_8666</a> from guicc_8666.o(i._GetIndexMask_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[167]">_GetIndexMask_88666I</a> from guicc_88666i.o(i._GetIndexMask_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[1b2]">_GetIndexMask_888</a> from guicc_888.o(i._GetIndexMask_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[1b6]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[16c]">_GetIndexMask_M1555I</a> from guicc_m1555i.o(i._GetIndexMask_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[171]">_GetIndexMask_M4444I</a> from guicc_m4444i.o(i._GetIndexMask_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[1bb]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[1c0]">_GetIndexMask_M888</a> from guicc_m888.o(i._GetIndexMask_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[176]">_GetIndexMask_M8888I</a> from guicc_m8888i.o(i._GetIndexMask_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[122]">_GetMotionTagR</a> from wm_motion.o(i._GetMotionTagR) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[11c]">_GetMotionTagXY</a> from wm_motion.o(i._GetMotionTagXY) referenced from wm_motion.o(i._ExecMotion)
 <LI><a href="#[188]">_GetPixelIndex</a> from gui_enablealpha.o(i._GetPixelIndex) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[127]">_GetPos</a> from guidrv_lin_32.o(i._GetPos) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[18f]">_GetRect</a> from gui_enablealpha.o(i._GetRect) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[11f]">_GetStuff</a> from gui_jpeg.o(i._GetStuff) referenced from gui_jpeg.o(i._GetBitsNoMarker)
 <LI><a href="#[cf]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
 <LI><a href="#[cf]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i._GetStuff)
 <LI><a href="#[39]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[180]">_Index2Color</a> from gui_enablealpha.o(i._Index2Color) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[112]">_Index2ColorBitfields</a> from gui_bmp.o(i._Index2ColorBitfields) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[183]">_Index2ColorBulk</a> from gui_enablealpha.o(i._Index2ColorBulk) referenced 7 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[161]">_Index2ColorBulk_1616I</a> from guicc_1616i.o(i._Index2ColorBulk_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[169]">_Index2ColorBulk_88666I</a> from guicc_88666i.o(i._Index2ColorBulk_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[16e]">_Index2ColorBulk_M1555I</a> from guicc_m1555i.o(i._Index2ColorBulk_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[e5]">_Index2ColorBulk_M1555IDMA2D</a> from guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M1555IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[173]">_Index2ColorBulk_M4444I</a> from guicc_m4444i.o(i._Index2ColorBulk_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[e9]">_Index2ColorBulk_M4444IDMA2D</a> from guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M4444IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[e7]">_Index2ColorBulk_M565DMA2D</a> from guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M565DMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[178]">_Index2ColorBulk_M8888I</a> from guicc_m8888i.o(i._Index2ColorBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[ed]">_Index2ColorBulk_M8888IDMA2D</a> from guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M8888IDMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[eb]">_Index2ColorBulk_M888DMA2D</a> from guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M888DMA2D) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[1ee]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[1e7]">_Index2Color_16</a> from guicc_16.o(i._Index2Color_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[15e]">_Index2Color_1616I</a> from guicc_1616i.o(i._Index2Color_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[166]">_Index2Color_88666I</a> from guicc_88666i.o(i._Index2Color_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[16b]">_Index2Color_M1555I</a> from guicc_m1555i.o(i._Index2Color_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[170]">_Index2Color_M4444I</a> from guicc_m4444i.o(i._Index2Color_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[12a]">_Init</a> from guidrv_lin_32.o(i._Init) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[b4]">_InvalidateNewItem</a> from graph_data_yt.o(i._InvalidateNewItem) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[f0]">_LCD_GetpPalConvTable</a> from guidrv_stm32f429i_discovery.o(i._LCD_GetpPalConvTable) referenced from guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
 <LI><a href="#[3b]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[1e4]">_MULTIBUF_Begin</a> from wm_multibuf.o(i._MULTIBUF_Begin) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[1e5]">_MULTIBUF_End</a> from wm_multibuf.o(i._MULTIBUF_End) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[121]">_Motion_AutoWithinParent</a> from wm_motion.o(i._Motion_AutoWithinParent) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[120]">_Motion_ByWindow</a> from wm_motion.o(i._Motion_ByWindow) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[1e]">_NextPixel_End</a> from gui_bmp.o(i._NextPixel_End) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[1d]">_NextPixel_NextLine</a> from gui_bmp.o(i._NextPixel_NextLine) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[1c]">_NextPixel_SetPixel</a> from gui_bmp.o(i._NextPixel_SetPixel) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[1b]">_NextPixel_Start</a> from gui_bmp.o(i._NextPixel_Start) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[12c]">_Off</a> from guidrv_lin_32.o(i._Off) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[12b]">_On</a> from guidrv_lin_32.o(i._On) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[b6]">_OnDelete</a> from graph_data_yt.o(i._OnDelete) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[be]">_OnExit</a> from gui_task.o(i._OnExit) referenced from gui_task.o(i.GUITASK_Init)
 <LI><a href="#[bf]">_OnExit</a> from guiaa_lib.o(i._OnExit) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[c2]">_OnExit</a> from gui_cursor.o(i._OnExit) referenced from gui_cursor.o(i.GUI_CURSOR_SelectEx)
 <LI><a href="#[c5]">_OnExit</a> from gui_enablealpha.o(i._OnExit) referenced from gui_enablealpha.o(i.GUI_EnableAlpha)
 <LI><a href="#[c9]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI_Init)
 <LI><a href="#[d1]">_OnExit</a> from gui_multibuf.o(i._OnExit) referenced from gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
 <LI><a href="#[d2]">_OnExit</a> from gui_pid.o(i._OnExit) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[d4]">_OnExit</a> from gui_setalpha.o(i._OnExit) referenced from gui_setalpha.o(i.GUI_SetAlpha)
 <LI><a href="#[d6]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[d8]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[df]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[106]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[107]">_OnExit</a> from wm_motion.o(i._OnExit) referenced from wm_motion.o(i.WM_MOTION_Enable)
 <LI><a href="#[10b]">_OnExit</a> from wm_touch.o(i._OnExit) referenced from wm_touch.o(i.WM__SetMotionCallback)
 <LI><a href="#[b5]">_OnPaint</a> from graph_data_yt.o(i._OnPaint) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[b7]">_OnPaint</a> from graph_scale.o(i._OnPaint) referenced from graph_scale.o(i.GRAPH_SCALE_Create)
 <LI><a href="#[af]">_OnPidStateChange</a> from button.o(i._OnPidStateChange) referenced from button.o(i.BUTTON_SetReactOnLevel)
 <LI><a href="#[24]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[ae]">_OnTouchReactOnLevel</a> from button.o(i._OnTouchReactOnLevel) referenced from button.o(i.BUTTON_SetReactOnLevel)
 <LI><a href="#[26]">_Paint</a> from button_skin.o(i._Paint) referenced 12 times from button_skin.o(.data)
 <LI><a href="#[14e]">_Paint0</a> from guidemo_fading.o(i._Paint0) referenced from guidemo_fading.o(.constdata)
 <LI><a href="#[14f]">_Paint1</a> from guidemo_fading.o(i._Paint1) referenced from guidemo_fading.o(.constdata)
 <LI><a href="#[133]">_ReadRect</a> from guidrv_lin_32.o(i._ReadRect) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[135]">_ReadRectFromMemdev</a> from gui_setalpha.o(i._ReadRectFromMemdev) referenced from gui_setalpha.o(i._GetLine)
 <LI><a href="#[128]">_SetAlpha</a> from guidrv_lin_32.o(i._SetAlpha) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[12d]">_SetAlphaMode</a> from guidrv_lin_32.o(i._SetAlphaMode) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[191]">_SetBkColor</a> from gui_enablealpha.o(i._SetBkColor) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[12f]">_SetChroma</a> from guidrv_lin_32.o(i._SetChroma) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[12e]">_SetChromaMode</a> from guidrv_lin_32.o(i._SetChromaMode) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[190]">_SetColor</a> from gui_enablealpha.o(i._SetColor) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[132]">_SetDevFunc</a> from guidrv_lin_32.o(i._SetDevFunc) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[192]">_SetDrawMode</a> from gui_enablealpha.o(i._SetDrawMode) referenced 2 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[18b]">_SetOrg</a> from gui_enablealpha.o(i._SetOrg) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[20]">_SetPixelAlpha</a> from gui_drawbitmap_8888.o(i._SetPixelAlpha) referenced 2 times from gui_drawbitmap_8888.o(.data)
 <LI><a href="#[189]">_SetPixelIndex</a> from gui_enablealpha.o(i._SetPixelIndex) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[126]">_SetPos</a> from guidrv_lin_32.o(i._SetPos) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[125]">_SetSize</a> from guidrv_lin_32.o(i._SetSize) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[123]">_SetVRAMAddr</a> from guidrv_lin_32.o(i._SetVRAMAddr) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[124]">_SetVSize</a> from guidrv_lin_32.o(i._SetVSize) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[129]">_SetVis</a> from guidrv_lin_32.o(i._SetVis) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[131]">_ShowBuffer</a> from guidrv_lin_32.o(i._ShowBuffer) referenced from guidrv_lin_32.o(i._GetDevFunc)
 <LI><a href="#[f6]">_Sort</a> from listview_setsort.o(i._Sort) referenced from listview_setsort.o(i.LISTVIEW_EnableSort)
 <LI><a href="#[f6]">_Sort</a> from listview_setsort.o(i._Sort) referenced from listview_setsort.o(i.LISTVIEW_SetSort)
 <LI><a href="#[18a]">_XorPixel</a> from gui_enablealpha.o(i._XorPixel) referenced 5 times from gui_enablealpha.o(.constdata)
 <LI><a href="#[ac]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[105]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[b9]">_cbBk</a> from guidemo.o(i._cbBk) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[136]">_cbBk</a> from guidemo_graph.o(i._cbBk) referenced from guidemo_graph.o(i._GraphDemo)
 <LI><a href="#[10e]">_cbBkWin</a> from guidemo_washingmachine.o(i._cbBkWin) referenced from guidemo_washingmachine.o(i._DemoWashingMachine)
 <LI><a href="#[110]">_cbButton</a> from guidemo_washingmachine.o(i._cbButton) referenced from guidemo_washingmachine.o(i._DemoWashingMachine)
 <LI><a href="#[10d]">_cbDialog</a> from guidemo_treeview.o(i._cbDialog) referenced from guidemo_treeview.o(i._DemoTreeview)
 <LI><a href="#[13a]">_cbDraw</a> from guidemo_radialmenu.o(i._cbDraw) referenced from guidemo_radialmenu.o(i._RadialMenu)
 <LI><a href="#[b8]">_cbEffect</a> from guidemo.o(i._cbEffect) referenced from guidemo.o(i.GUIDEMO_Main)
 <LI><a href="#[137]">_cbFrameWinControl</a> from guidemo.o(i._cbFrameWinControl) referenced from guidemo.o(i._Main)
 <LI><a href="#[138]">_cbFrameWinInfo</a> from guidemo.o(i._cbFrameWinInfo) referenced from guidemo.o(i._Main)
 <LI><a href="#[102]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i.WM_BringToTop)
 <LI><a href="#[10f]">_cbMain</a> from guidemo_washingmachine.o(i._cbMain) referenced from guidemo_washingmachine.o(i._DemoWashingMachine)
 <LI><a href="#[108]">_cbMotion</a> from wm_motion.o(i._cbMotion) referenced from wm_motion.o(i.WM_MOTION_Enable)
 <LI><a href="#[13b]">_cbMotion</a> from guidemo_radialmenu.o(i._cbMotion) referenced from guidemo_radialmenu.o(i._RadialMenu)
 <LI><a href="#[104]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM_Exec)
 <LI><a href="#[13f]">_cbStatus</a> from guidemo_washingmachine.o(i._cbStatus) referenced from guidemo_washingmachine.o(i._cbMain)
 <LI><a href="#[139]">_cbSubMenu</a> from guidemo_washingmachine.o(i._cbSubMenu) referenced from guidemo_washingmachine.o(i._OpenSubMenu)
 <LI><a href="#[103]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[11d]">_cbTimer</a> from wm_motion.o(i._cbTimer) referenced 2 times from wm_motion.o(i._ExecMotion)
 <LI><a href="#[11d]">_cbTimer</a> from wm_motion.o(i._cbTimer) referenced from wm_motion.o(i._MoveToNearestSnapPosition)
 <LI><a href="#[13e]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[a9]">main</a> from components.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[144]">main_thread_entry</a> from components.o(i.main_thread_entry) referenced from components.o(i.rt_application_init)
 <LI><a href="#[38]">memcpy</a> from memmove.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[37]">memset</a> from memseta.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[140]">rt_thread_exit</a> from thread.o(i.rt_thread_exit) referenced from thread.o(i._rt_thread_init)
 <LI><a href="#[145]">rt_thread_idle_entry</a> from idle.o(i.rt_thread_idle_entry) referenced from idle.o(i.rt_thread_idle_init)
 <LI><a href="#[141]">rt_thread_timeout</a> from thread.o(i.rt_thread_timeout) referenced from thread.o(i._rt_thread_init)
 <LI><a href="#[204]">rti_board_end</a> from components.o(i.rti_board_end) referenced from components.o(.rti_fn.1.end)
 <LI><a href="#[203]">rti_board_start</a> from components.o(i.rti_board_start) referenced from components.o(.rti_fn.0.end)
 <LI><a href="#[205]">rti_end</a> from components.o(i.rti_end) referenced from components.o(.rti_fn.6.end)
 <LI><a href="#[202]">rti_start</a> from components.o(i.rti_start) referenced from components.o(.rti_fn.0)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ac]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[617]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[206]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[21a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[618]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[619]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[61a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[61b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[61c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[44]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[21b]"></a>rt_hw_interrupt_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5d8]"></a>rt_hw_interrupt_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5f7]"></a>rt_hw_context_switch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[5f8]"></a>rt_hw_context_switch_interrupt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[4c]"></a>PendSV_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[603]"></a>rt_hw_context_switch_to</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
</UL>

<P><STRONG><a name="[61d]"></a>rt_hw_interrupt_thread_switch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, context_rvds.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>HardFault_Handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = HardFault_Handler &rArr; rt_hw_hard_fault_exception &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_hard_fault_exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[323]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[61e]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[61f]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[620]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[621]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[622]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[2ce]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[2bf]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>

<P><STRONG><a name="[38]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[623]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[624]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[625]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2cf]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[626]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[308]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
</UL>

<P><STRONG><a name="[449]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[4d1]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CompareText
</UL>

<P><STRONG><a name="[445]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[20b]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[210]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[211]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[212]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[213]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[214]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[215]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3e8]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[627]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[5a3]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[217]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[628]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5ca]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[20c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[629]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[62a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[62b]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[62c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[62d]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[20e]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[219]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[5c8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[207]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[62e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[62f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[630]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, components.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = main &rArr; rtthread_startup &rArr; rt_application_init &rArr; rt_thread_create &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ad]"></a>BUTTON_Callback</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[227]"></a>BUTTON_CreateEx</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[147]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, button.o(i.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(.constdata)
</UL>
<P><STRONG><a name="[228]"></a>BUTTON_CreateUser</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>

<P><STRONG><a name="[25]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 566 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(i.GUIDEMO_Main)
<LI> button.o(.data)
</UL>
<P><STRONG><a name="[23d]"></a>BUTTON_IsPressed</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, button.o(i.BUTTON_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BUTTON_IsPressed &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[315]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_skin.o(i.BUTTON_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[310]"></a>BUTTON_SetReactOnLevel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetReactOnLevel))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[48]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f429i_discovery_i2c_ee.o(i.DMA1_Stream2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream2_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f429i_discovery_i2c_ee.o(i.DMA1_Stream4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream4_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_TIMEOUT_UserCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[253]"></a>DMA2D_ISR_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_stm32f429i_discovery.o(i.DMA2D_ISR_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[24f]"></a>DMA_ClearFlag</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>

<P><STRONG><a name="[24e]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>

<P><STRONG><a name="[24c]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[502]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[503]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[500]"></a>FMC_SDRAMInit</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[505]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[b1]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 824 bytes, Stack size 88 bytes, framewin.o(i.FRAMEWIN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[146]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, framewin.o(i.FRAMEWIN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(.constdata)
<LI> guidemo_treeview.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>FRAMEWIN_CreateUser</STRONG> (Thumb, 304 bytes, Stack size 96 bytes, framewin.o(i.FRAMEWIN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
</UL>

<P><STRONG><a name="[29]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 894 bytes, Stack size 120 bytes, framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>
<BR>[Address Reference Count : 2]<UL><LI> framewin_skin.o(.data)
<LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[265]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_GetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FRAMEWIN_GetActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[311]"></a>FRAMEWIN_GetSkinFlexProps</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, framewin_skinflex.o(i.FRAMEWIN_GetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FRAMEWIN_GetSkinFlexProps
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[313]"></a>FRAMEWIN_SetDefaultSkin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, framewin_skin.o(i.FRAMEWIN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[269]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[312]"></a>FRAMEWIN_SetSkinFlexProps</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, framewin_skinflex.o(i.FRAMEWIN_SetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FRAMEWIN_SetSkinFlexProps
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[26d]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>

<P><STRONG><a name="[26e]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>

<P><STRONG><a name="[25c]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 328 bytes, Stack size 88 bytes, framewin.o(i.FRAMEWIN__CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[274]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, framewin.o(i.FRAMEWIN__CalcTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
</UL>

<P><STRONG><a name="[28]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, framewin.o(i.FRAMEWIN__GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[275]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__GetTitleLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[26c]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 258 bytes, Stack size 72 bytes, framewin__updatebuttons.o(i.FRAMEWIN__UpdateButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[26b]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__UpdatePositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[243]"></a>GL_DispChar</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GL_DispChar &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[27e]"></a>GL_DrawArc</STRONG> (Thumb, 304 bytes, Stack size 56 bytes, gui_arc.o(i.GL_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[280]"></a>GL_DrawBitmap</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[283]"></a>GL_DrawCircle</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, gui_circ.o(i.GL_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GL_DrawCircle &rArr; Draw8Point
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[285]"></a>GL_DrawLine</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[287]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 898 bytes, Stack size 40 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[286]"></a>GL_DrawLineEx</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[288]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawlib.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[28a]"></a>GL_FillCircle</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[28b]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, guiaa_circle.o(i.GL_FillCircleAA_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[289]"></a>GL_FillPolygon</STRONG> (Thumb, 622 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GL_FillPolygon
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[28e]"></a>GL_SetDefault</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_common.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GL_SetDefault &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[479]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO_Config
</UL>

<P><STRONG><a name="[478]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO_Config
</UL>

<P><STRONG><a name="[485]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>

<P><STRONG><a name="[486]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>

<P><STRONG><a name="[489]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
</UL>

<P><STRONG><a name="[291]"></a>GRAPH_AttachData</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, graph.o(i.GRAPH_AttachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GRAPH_AttachData &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[293]"></a>GRAPH_AttachScale</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, graph.o(i.GRAPH_AttachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GRAPH_AttachScale &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[b3]"></a>GRAPH_Callback</STRONG> (Thumb, 1380 bytes, Stack size 176 bytes, graph.o(i.GRAPH_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = GRAPH_Callback &rArr; _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph.o(i.GRAPH_CreateUser)
</UL>
<P><STRONG><a name="[2a9]"></a>GRAPH_CreateEx</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, graph.o(i.GRAPH_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = GRAPH_CreateEx &rArr; GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2aa]"></a>GRAPH_CreateUser</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, graph.o(i.GRAPH_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
</UL>

<P><STRONG><a name="[2ac]"></a>GRAPH_DATA_YT_AddValue</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Heartbeat
</UL>

<P><STRONG><a name="[2ae]"></a>GRAPH_DATA_YT_Create</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GRAPH_DATA_YT_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b0]"></a>GRAPH_DATA_YT_Delete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GRAPH_DATA_YT_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b1]"></a>GRAPH_DetachData</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, graph.o(i.GRAPH_DetachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GRAPH_DetachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[2b3]"></a>GRAPH_DetachScale</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, graph.o(i.GRAPH_DetachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GRAPH_DetachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b4]"></a>GRAPH_SCALE_Create</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, graph_scale.o(i.GRAPH_SCALE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GRAPH_SCALE_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b5]"></a>GRAPH_SCALE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graph_scale.o(i.GRAPH_SCALE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GRAPH_SCALE_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b6]"></a>GRAPH_SCALE_SetOff</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph_scale.o(i.GRAPH_SCALE_SetOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SCALE_SetOff &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b7]"></a>GRAPH_SCALE_SetPos</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph_scale.o(i.GRAPH_SCALE_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SCALE_SetPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b8]"></a>GRAPH_SetBorder</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, graph.o(i.GRAPH_SetBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = GRAPH_SetBorder &rArr; _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2b9]"></a>GRAPH_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2ba]"></a>GRAPH_SetGridDistX</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridDistX &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2bb]"></a>GRAPH_SetGridDistY</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridDistY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2bc]"></a>GRAPH_SetGridOffY</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, graph.o(i.GRAPH_SetGridOffY))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GRAPH_SetGridOffY &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2be]"></a>GRAPH_SetGridVis</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridVis &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2ad]"></a>GRAPH__AddValue</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, graph.o(i.GRAPH__AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GRAPH__AddValue &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>

<P><STRONG><a name="[2c0]"></a>GRAPH__InvalidateGraph</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, graph.o(i.GRAPH__InvalidateGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
</UL>

<P><STRONG><a name="[4b5]"></a>GUICC_M1555I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m1555i.o(i.GUICC_M1555I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4b7]"></a>GUICC_M4444I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m4444i.o(i.GUICC_M4444I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4b6]"></a>GUICC_M565_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m565.o(i.GUICC_M565_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4b9]"></a>GUICC_M8888I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m8888i.o(i.GUICC_M8888I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4b8]"></a>GUICC_M888_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m888.o(i.GUICC_M888_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2d4]"></a>GUIDEMO_AddIntToString</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, guidemo.o(i.GUIDEMO_AddIntToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIDEMO_AddIntToString
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[2d5]"></a>GUIDEMO_AddStringToString</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_AddStringToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_AddStringToString
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[b]"></a>GUIDEMO_AntialiasedText</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_antialiasedtext.o(i.GUIDEMO_AntialiasedText))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = GUIDEMO_AntialiasedText &rArr; _DrawScreen &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>GUIDEMO_BarGraph</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidemo_bargraph.o(i.GUIDEMO_BarGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = GUIDEMO_BarGraph &rArr; _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>GUIDEMO_Bitmap</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidemo_bitmap.o(i.GUIDEMO_Bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = GUIDEMO_Bitmap &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2c9]"></a>GUIDEMO_CheckCancel</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_CheckCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2cb]"></a>GUIDEMO_CheckCancelDelay</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidemo.o(i.GUIDEMO_CheckCancelDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
</UL>

<P><STRONG><a name="[31b]"></a>GUIDEMO_ClearHalt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_ClearHalt))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[14]"></a>GUIDEMO_ColorBar</STRONG> (Thumb, 872 bytes, Stack size 280 bytes, guidemo_colorbar.o(i.GUIDEMO_ColorBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = GUIDEMO_ColorBar &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[319]"></a>GUIDEMO_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidemo_conf.o(i.GUIDEMO_Config))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2c3]"></a>GUIDEMO_ConfigureDemo</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, guidemo.o(i.GUIDEMO_ConfigureDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ZoomAndRotate
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Fading
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
</UL>

<P><STRONG><a name="[13]"></a>GUIDEMO_Cursor</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_cursor.o(i.GUIDEMO_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = GUIDEMO_Cursor &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2df]"></a>GUIDEMO_Delay</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidemo.o(i.GUIDEMO_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[2c5]"></a>GUIDEMO_DispTitle</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, guidemo.o(i.GUIDEMO_DispTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUIDEMO_DispTitle &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>

<P><STRONG><a name="[2c4]"></a>GUIDEMO_DrawBk</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
</UL>

<P><STRONG><a name="[9]"></a>GUIDEMO_Fading</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_fading.o(i.GUIDEMO_Fading))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = GUIDEMO_Fading &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2e8]"></a>GUIDEMO_GetConfFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_GetConfFlag))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2d7]"></a>GUIDEMO_GetTime</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIDEMO_GetTime &rArr; GUI_GetTime &rArr; GUI_X_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
</UL>

<P><STRONG><a name="[2f1]"></a>GUIDEMO_GetTitleSizeY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_GetTitleSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[11]"></a>GUIDEMO_Graph</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_graph.o(i.GUIDEMO_Graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = GUIDEMO_Graph &rArr; _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2db]"></a>GUIDEMO_HideCursor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_HideCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GUIDEMO_HideCursor &rArr; GUI_CURSOR_Hide &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyFromLCD
</UL>

<P><STRONG><a name="[d]"></a>GUIDEMO_IconView</STRONG> (Thumb, 538 bytes, Stack size 80 bytes, guidemo_iconview.o(i.GUIDEMO_IconView))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = GUIDEMO_IconView &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTitleSizeY
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>GUIDEMO_ImageFlow</STRONG> (Thumb, 450 bytes, Stack size 88 bytes, guidemo_imageflow.o(i.GUIDEMO_ImageFlow))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840<LI>Call Chain = GUIDEMO_ImageFlow &rArr; _GetImages &rArr; GUI_JPEG_Draw &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_GetNumBuffers
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImages
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[306]"></a>GUIDEMO_Intro</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, guidemo_intro.o(i.GUIDEMO_Intro))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetVersionString
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[10]"></a>GUIDEMO_Listview</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_listview.o(i.GUIDEMO_Listview))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = GUIDEMO_Listview &rArr; _DemoListview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[30b]"></a>GUIDEMO_Main</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, guidemo.o(i.GUIDEMO_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetDefaultSkin
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultSkin
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetDefaultSkin
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDefaultSkin
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetAnimationCallback
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Config
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultSkin
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetReactOnLevel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread2
</UL>

<P><STRONG><a name="[5a7]"></a>GUIDEMO_MixColors</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, guidemo.o(i.GUIDEMO_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUIDEMO_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPalette
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
</UL>

<P><STRONG><a name="[2cd]"></a>GUIDEMO_NotifyStartNext</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_NotifyStartNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUIDEMO_NotifyStartNext &rArr; _UpdateControlText &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
</UL>

<P><STRONG><a name="[7]"></a>GUIDEMO_RadialMenu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guidemo_radialmenu.o(i.GUIDEMO_RadialMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = GUIDEMO_RadialMenu &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f8]"></a>GUIDEMO_SetInfoText</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidemo.o(i.GUIDEMO_SetInfoText))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUIDEMO_SetInfoText &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5b5]"></a>GUIDEMO_ShiftRight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_ShiftRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_ShiftRight
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2da]"></a>GUIDEMO_ShowCursor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_ShowCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GUIDEMO_ShowCursor &rArr; GUI_CURSOR_Show &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyFromLCD
</UL>

<P><STRONG><a name="[12]"></a>GUIDEMO_Speed</STRONG> (Thumb, 456 bytes, Stack size 136 bytes, guidemo_speed.o(i.GUIDEMO_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = GUIDEMO_Speed &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>GUIDEMO_Treeview</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_treeview.o(i.GUIDEMO_Treeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = GUIDEMO_Treeview &rArr; _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[327]"></a>GUIDEMO_Wait</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_Wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
</UL>

<P><STRONG><a name="[c]"></a>GUIDEMO_WashingMachine</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_washingmachine.o(i.GUIDEMO_WashingMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = GUIDEMO_WashingMachine &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>GUIDEMO_ZoomAndRotate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_zoomandrotate.o(i.GUIDEMO_ZoomAndRotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = GUIDEMO_ZoomAndRotate &rArr; _DemoZoomAndRotate &rArr; _RotateAndZoomImage &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[1f4]"></a>GUIMONO_DispChar</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[1f5]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[1f6]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[1f7]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15b]"></a>GUIPROP_AA2_EXT_DispChar</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUIPROP_AA2_EXT_DispChar &rArr; GUI_AA__DrawCharAA2 &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>GUIPROP_AA4_DispChar</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, guiaa_char4.o(i.GUIPROP_AA4_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUIPROP_AA4_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>GUIPROP_AA4_EXT_DispChar</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, guiaa_char4ext.o(i.GUIPROP_AA4_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUIPROP_AA4_EXT_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>GUIPROP_AA4_GetCharDistX</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_AA4_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>GUIPROP_AA4_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetFontInfo))
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>GUIPROP_AA4_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_char4.o(i.GUIPROP_AA4_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_AA4_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>GUIPROP_DispChar</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUIPROP_DispChar &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 9]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_EXT_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharInfo))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[21]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, gui_encext.o(i.GUIPROP_EXT__ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUIPROP_EXT__ClearLine &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.data)
</UL>
<P><STRONG><a name="[193]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, gui_encext.o(i.GUIPROP_EXT__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUIPROP_EXT__DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.constdata)
</UL>
<P><STRONG><a name="[32a]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[153]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Address Reference Count : 9]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 9]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR>[Address Reference Count : 9]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[32c]"></a>GUIPROP__FindChar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_IsInFont
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_GetCharDistX
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[331]"></a>GUITASK_CopyContext</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUITASK_CopyContext &rArr; GUI_X_GetTaskId
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[333]"></a>GUITASK_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = GUITASK_Init &rArr; GUI_X_InitOS &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[595]"></a>GUI_AA_DisableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_DisableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
</UL>

<P><STRONG><a name="[337]"></a>GUI_AA_DrawArc</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, guiaa_arc.o(i.GUI_AA_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[33c]"></a>GUI_AA_DrawLine</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, guiaa_line.o(i.GUI_AA_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_AA_DrawLine &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[593]"></a>GUI_AA_EnableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_EnableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
</UL>

<P><STRONG><a name="[28d]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[340]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 344 bytes, Stack size 72 bytes, guiaa_circle.o(i.GUI_AA_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_AA_FillCircle &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
</UL>

<P><STRONG><a name="[341]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_HiRes2Pixel))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[33e]"></a>GUI_AA_Init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[28c]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[594]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_SetFactor))
<BR><BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
</UL>

<P><STRONG><a name="[32b]"></a>GUI_AA__DrawCharAA2</STRONG> (Thumb, 392 bytes, Stack size 96 bytes, guiaa_char2.o(i.GUI_AA__DrawCharAA2))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_AA__DrawCharAA2 &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
</UL>

<P><STRONG><a name="[32d]"></a>GUI_AA__DrawCharAA4</STRONG> (Thumb, 200 bytes, Stack size 88 bytes, guiaa_char4.o(i.GUI_AA__DrawCharAA4))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_AA__DrawCharAA4 &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
</UL>

<P><STRONG><a name="[345]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[347]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[2af]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[432]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[2a3]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
</UL>

<P><STRONG><a name="[376]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[220]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
</UL>

<P><STRONG><a name="[221]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[335]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[34c]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[30c]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetNumFreeBytes))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[352]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[37a]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[21e]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
</UL>

<P><STRONG><a name="[34d]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gui_alloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_ALLOC_Realloc &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[34e]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[37c]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[21f]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
</UL>

<P><STRONG><a name="[371]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>

<P><STRONG><a name="[292]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>

<P><STRONG><a name="[2ab]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[2a4]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2b2]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
</UL>

<P><STRONG><a name="[2a1]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[2a2]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[34f]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[350]"></a>GUI_ARRAY_InsertItem</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, gui_array_insertitem.o(i.GUI_ARRAY_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_ARRAY_InsertItem &rArr; GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[351]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, gui_array.o(i.GUI_ARRAY_SetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
</UL>

<P><STRONG><a name="[353]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_val.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[355]"></a>GUI_AddDecShift</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, gui_common.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[385]"></a>GUI_AddSign</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_common.o(i.GUI_AddSign))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[356]"></a>GUI_BMP_Draw</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_BMP_Draw &rArr; _Draw &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[c1]"></a>GUI_BMP__GetData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_bmp.o(i.GUI_BMP__GetData))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i.GUI_BMP_Draw)
</UL>
<P><STRONG><a name="[358]"></a>GUI_BMP__Init</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, gui_bmp.o(i.GUI_BMP__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_BMP__Init &rArr; _ManageBitfields
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[35c]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_cursor.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_CURSOR_GetStateEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[2e9]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_CURSOR_Hide &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[361]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_cursor.o(i.GUI_CURSOR_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_CURSOR_Select &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[362]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, gui_cursor.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[368]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[320]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GUI_CURSOR_Show &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
</UL>

<P><STRONG><a name="[57b]"></a>GUI_CalcColorDist</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gui_common.o(i.GUI_CalcColorDist))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[27c]"></a>GUI_Clear</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_Clear &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[2a0]"></a>GUI_ClearRect</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[36b]"></a>GUI_ClearRectEx</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ClearRectEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[321]"></a>GUI_Color2Index</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Color2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_Color2Index &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[36d]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, dialog.o(i.GUI_CreateDialogBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[409]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_core.o(i.GUI_DCACHE_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[372]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[373]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[375]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[374]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 156 bytes, Stack size 4 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[3c8]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, gui_device.o(i.GUI_DEVICE_LinkDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_DEVICE_LinkDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[414]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[3c7]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[420]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDevice))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[3d9]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>

<P><STRONG><a name="[236]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[377]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[378]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_Delay</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[37d]"></a>GUI_DispCharAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
</UL>

<P><STRONG><a name="[37e]"></a>GUI_DispDecAt</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
</UL>

<P><STRONG><a name="[37f]"></a>GUI_DispDecMin</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
</UL>

<P><STRONG><a name="[381]"></a>GUI_DispDecShift</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[382]"></a>GUI_DispFloatMin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_valf.o(i.GUI_DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[384]"></a>GUI_DispSDecShift</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispSDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[380]"></a>GUI_DispString</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstring.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[23b]"></a>GUI_DispStringInRect</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gui_dispstring.o(i.GUI_DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[38e]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 320 bytes, Stack size 80 bytes, gui_dispstring.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__DrawText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[309]"></a>GUI_DrawBitmap</STRONG> (Thumb, 234 bytes, Stack size 72 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[391]"></a>GUI_DrawBitmapMag</STRONG> (Thumb, 212 bytes, Stack size 96 bytes, gui_drawlib.o(i.GUI_DrawBitmapMag))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DrawBitmapMag &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[392]"></a>GUI_DrawCircle</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_circ.o(i.GUI_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DrawCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[393]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gui_drawlib.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[fa]"></a>GUI_DrawGradientH</STRONG> (Thumb, 466 bytes, Stack size 192 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[fd]"></a>GUI_DrawGradientV</STRONG> (Thumb, 530 bytes, Stack size 192 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[394]"></a>GUI_DrawGraphEx</STRONG> (Thumb, 628 bytes, Stack size 136 bytes, gui_drawgraphex.o(i.GUI_DrawGraphEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_DrawGraphEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[231]"></a>GUI_DrawHLine</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[29c]"></a>GUI_DrawLine</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DrawLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[267]"></a>GUI_DrawPixel</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DrawPixel &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[234]"></a>GUI_DrawRect</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[395]"></a>GUI_DrawRoundedRect</STRONG> (Thumb, 412 bytes, Stack size 152 bytes, gui_drawroundedrect.o(i.GUI_DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_DrawRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[232]"></a>GUI_DrawVLine</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2c1]"></a>GUI_EnableAlpha</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_enablealpha.o(i.GUI_EnableAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_EnableAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AntialiasedText
</UL>

<P><STRONG><a name="[30d]"></a>GUI_ErrorOut</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_errorout.o(i.GUI_ErrorOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ErrorOut
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ErrorOut
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2d8]"></a>GUI_Exec</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gui_common.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
</UL>

<P><STRONG><a name="[233]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[268]"></a>GUI_FillRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_FillRectEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[39a]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 246 bytes, Stack size 96 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_FillRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[39b]"></a>GUI_GIF_DrawSub</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF_DrawSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_GIF_DrawSub &rArr; GUI_GIF_DrawSubEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[39c]"></a>GUI_GIF_DrawSubEx</STRONG> (Thumb, 188 bytes, Stack size 80 bytes, gui_gif.o(i.GUI_GIF_DrawSubEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_GIF_DrawSubEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSub
</UL>

<P><STRONG><a name="[3a1]"></a>GUI_GIF_GetImageInfo</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_GIF_GetImageInfo &rArr; GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[3a2]"></a>GUI_GIF_GetImageInfoEx</STRONG> (Thumb, 464 bytes, Stack size 56 bytes, gui_gif.o(i.GUI_GIF_GetImageInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_GIF_GetInfo</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_GIF_GetInfo &rArr; GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[3a6]"></a>GUI_GIF_GetInfoEx</STRONG> (Thumb, 392 bytes, Stack size 56 bytes, gui_gif.o(i.GUI_GIF_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
</UL>

<P><STRONG><a name="[39f]"></a>GUI_GIF__DrawFromFilePointer</STRONG> (Thumb, 600 bytes, Stack size 168 bytes, gui_gif.o(i.GUI_GIF__DrawFromFilePointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[c6]"></a>GUI_GIF__GetData</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gui_gif.o(i.GUI_GIF__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_GIF__GetData
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSub)
<LI> gui_gif.o(i.GUI_GIF_GetImageInfo)
<LI> gui_gif.o(i.GUI_GIF_GetInfo)
</UL>
<P><STRONG><a name="[3a7]"></a>GUI_GIF__GetNextByte</STRONG> (Thumb, 850 bytes, Stack size 40 bytes, gui_gif.o(i.GUI_GIF__GetNextByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_GIF__GetNextByte &rArr; _GetDataBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[419]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[59e]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[401]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[32f]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[23f]"></a>GUI_GetCharDistX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[3a9]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[238]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[32e]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
</UL>

<P><STRONG><a name="[35e]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[247]"></a>GUI_GetDrawMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_FillRect
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_GetFontDistY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[241]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>

<P><STRONG><a name="[3aa]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[29a]"></a>GUI_GetLineStyle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[3ac]"></a>GUI_GetOrg</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_GetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[33a]"></a>GUI_GetPenSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[2e5]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_dispstring.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>

<P><STRONG><a name="[2cc]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagXY
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[307]"></a>GUI_GetVersionString</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetVersionString))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
</UL>

<P><STRONG><a name="[386]"></a>GUI_GetYAdjust</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[44f]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[26a]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[3ea]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[402]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[36a]"></a>GUI_GotoXY</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3ae]"></a>GUI_Init</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread2
</UL>

<P><STRONG><a name="[3b9]"></a>GUI_JPEG_Draw</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, gui_jpeg.o(i.GUI_JPEG_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1712<LI>Call Chain = GUI_JPEG_Draw &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImages
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[3bb]"></a>GUI_JPEG_GetInfo</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, gui_jpeg.o(i.GUI_JPEG_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_JPEG_GetInfo &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImages
</UL>

<P><STRONG><a name="[3bd]"></a>GUI_JPEG__AllocBandingCoeffBuffer</STRONG> (Thumb, 274 bytes, Stack size 72 bytes, gui_jpeg.o(i.GUI_JPEG__AllocBandingCoeffBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_JPEG__AllocBandingCoeffBuffer &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[3be]"></a>GUI_JPEG__DecodeLine</STRONG> (Thumb, 2902 bytes, Stack size 256 bytes, gui_jpeg.o(i.GUI_JPEG__DecodeLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = GUI_JPEG__DecodeLine &rArr; _LoadNextRow &rArr; _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[ca]"></a>GUI_JPEG__GetData</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, gui_jpeg.o(i.GUI_JPEG__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_JPEG__GetData
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_jpeg.o(i.GUI_JPEG_Draw)
<LI> gui_jpeg.o(i.GUI_JPEG_GetInfo)
</UL>
<P><STRONG><a name="[3c2]"></a>GUI_JPEG__InitDraw</STRONG> (Thumb, 1384 bytes, Stack size 88 bytes, gui_jpeg.o(i.GUI_JPEG__InitDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[3bc]"></a>GUI_JPEG__ReadUntilSOF</STRONG> (Thumb, 406 bytes, Stack size 56 bytes, gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_JPEG__ReadUntilSOF &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[229]"></a>GUI_Lock</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
</UL>

<P><STRONG><a name="[354]"></a>GUI_Long2Len</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, gui_common.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[3c9]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3ca]"></a>GUI_MEMDEV_CopyFromLCD</STRONG> (Thumb, 830 bytes, Stack size 120 bytes, guidev_copyfromlcd.o(i.GUI_MEMDEV_CopyFromLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_MEMDEV_CopyFromLCD &rArr; GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__XY2PTREx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyFromLCD
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[23]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[3d1]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[3d8]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[3db]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3dc]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImages
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[303]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[3de]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 340 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[3e7]"></a>GUI_MEMDEV_DrawPerspectiveX</STRONG> (Thumb, 896 bytes, Stack size 216 bytes, guidev_perspective.o(i.GUI_MEMDEV_DrawPerspectiveX))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_MEMDEV_DrawPerspectiveX &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPerspective
</UL>

<P><STRONG><a name="[3ed]"></a>GUI_MEMDEV_FadeInDevices</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_moveandfade.o(i.GUI_MEMDEV_FadeInDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = GUI_MEMDEV_FadeInDevices &rArr; _FadeDevices &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
</UL>

<P><STRONG><a name="[3cc]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3f0]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3f1]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetXPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetXPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[3f2]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getxsize.o(i.GUI_MEMDEV_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[3f3]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetYPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[3e3]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[10a]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wm.o(i.WM__PaintWinAndOverlays)
<LI> wm.o(i._PaintTransChildren)
</UL>
<P><STRONG><a name="[3e5]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[13c]"></a>GUI_MEMDEV_Rotate</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidev_rotate.o(i.GUI_MEMDEV_Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_MEMDEV_Rotate &rArr; GUI_MEMDEV__Rotate &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_zoomandrotate.o(i._ShiftImage)
<LI> guidemo_zoomandrotate.o(i._RotateAndZoomImage)
</UL>
<P><STRONG><a name="[13d]"></a>GUI_MEMDEV_RotateHQ</STRONG> (Thumb, 564 bytes, Stack size 136 bytes, guidev_rotate.o(i.GUI_MEMDEV_RotateHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_MEMDEV_RotateHQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinMax
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_zoomandrotate.o(i._ShiftImage)
</UL>
<P><STRONG><a name="[3cb]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImages
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[30e]"></a>GUI_MEMDEV_SetAnimationCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_moveandfade.o(i.GUI_MEMDEV_SetAnimationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[3e6]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[22]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MEMDEV_Write &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[3fc]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
</UL>

<P><STRONG><a name="[3da]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3f6]"></a>GUI_MEMDEV__Rotate</STRONG> (Thumb, 632 bytes, Stack size 144 bytes, guidev_rotate.o(i.GUI_MEMDEV__Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_MEMDEV__Rotate &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Rotate
</UL>

<P><STRONG><a name="[421]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_banding.o(i.GUI_MEMDEV__SetAlphaCallback))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[134]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 418 bytes, Stack size 136 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3fb]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[3d3]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 2070 bytes, Stack size 168 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[3ce]"></a>GUI_MEMDEV__XY2PTREx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidev_xy2ptr.o(i.GUI_MEMDEV__XY2PTREx))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[405]"></a>GUI_MULTIBUF_Begin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
</UL>

<P><STRONG><a name="[406]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_BeginEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_Begin
</UL>

<P><STRONG><a name="[407]"></a>GUI_MULTIBUF_ConfigEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_ConfigEx
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4e9]"></a>GUI_MULTIBUF_ConfirmEx</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfirmEx))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
</UL>

<P><STRONG><a name="[408]"></a>GUI_MULTIBUF_End</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_End
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
</UL>

<P><STRONG><a name="[40a]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_EndEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_End
</UL>

<P><STRONG><a name="[2ff]"></a>GUI_MULTIBUF_GetNumBuffers</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_GetNumBuffers))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[4f0]"></a>GUI_MergeRect</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, gui_common.o(i.GUI_MergeRect))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[239]"></a>GUI_MoveRect</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_common.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[324]"></a>GUI_PID_GetState</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delay
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[549]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[40b]"></a>GUI_PID_StoreState</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_PID_StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_Update
</UL>

<P><STRONG><a name="[40d]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[40f]"></a>GUI_ReadRectEx</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[43d]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[411]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[412]"></a>GUI_SPRITE_Create</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_sprite.o(i.GUI_SPRITE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_SPRITE_Create &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[365]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[360]"></a>GUI_SPRITE_Hide</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_SPRITE_Hide &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
</UL>

<P><STRONG><a name="[415]"></a>GUI_SPRITE_SetBitmapAndPosition</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gui_sprite.o(i.GUI_SPRITE_SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
</UL>

<P><STRONG><a name="[35d]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 1384 bytes, Stack size 232 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[367]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[366]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[41e]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[3d4]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[363]"></a>GUI_SelectLayer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[397]"></a>GUI_SetAlpha</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, gui_setalpha.o(i.GUI_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i.GUI_SetAlpha)
</UL>
<P><STRONG><a name="[298]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[305]"></a>GUI_SetClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[230]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[322]"></a>GUI_SetColorIndex</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[281]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[237]"></a>GUI_SetFont</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4ba]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncAlphaBlending))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4bb]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetFuncGetpPalConvTable))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4bc]"></a>GUI_SetFuncMixColors</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColors))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4bd]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColorsBulk))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[369]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[364]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetLayerSizeEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[35f]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetLayerVisEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[29b]"></a>GUI_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[304]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[33d]"></a>GUI_SetPenShape</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetPenShape))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetPenShape &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[33b]"></a>GUI_SetPenSize</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[38b]"></a>GUI_SetTextAlign</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[23a]"></a>GUI_SetTextMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[40c]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[425]"></a>GUI_StoreKey</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[426]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_onkey.o(i.GUI_StoreKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_StoreKeyMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
</UL>

<P><STRONG><a name="[427]"></a>GUI_TIMER_Create</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[429]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[d5]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[42a]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_TIMER_GetFlag &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[42b]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[42c]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[42d]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[42e]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[330]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__DispLine
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[38a]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5a0]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3fd]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3dd]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[22c]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; rt_sem_release &rArr; rt_ipc_list_resume &rArr; rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
</UL>

<P><STRONG><a name="[3af]"></a>GUI_X_Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GUI_X_Config &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[37b]"></a>GUI_X_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_X_Delay &rArr; rt_thread_delay &rArr; rt_thread_sleep &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[398]"></a>GUI_X_ErrorOut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_os.o(i.GUI_X_ErrorOut))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut
</UL>

<P><STRONG><a name="[3c]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_ExecIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_X_ExecIdle &rArr; GUI_X_Delay &rArr; rt_thread_delay &rArr; rt_thread_sleep &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[332]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_GetTaskId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_GetTaskId
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
</UL>

<P><STRONG><a name="[379]"></a>GUI_X_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[3b1]"></a>GUI_X_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GUI_X_Init &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[336]"></a>GUI_X_InitOS</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_InitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GUI_X_InitOS &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_create
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[3c6]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[42f]"></a>GUI_X_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_os.o(i.GUI_X_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_X_Unlock &rArr; rt_sem_release &rArr; rt_ipc_list_resume &rArr; rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[439]"></a>GUI__ATan2</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, gui__sinhq.o(i.GUI__ATan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ATan2
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
</UL>

<P><STRONG><a name="[3fe]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[3f4]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaPreserveTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[403]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 396 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[400]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[43c]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__ConvertColor2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[3f7]"></a>GUI__CosHQ</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, gui__sinhq.o(i.GUI__CosHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__CosHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[389]"></a>GUI__DispLine</STRONG> (Thumb, 462 bytes, Stack size 56 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[38d]"></a>GUI__DispStringInRect</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, gui_dispstring.o(i.GUI__DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[4f6]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorHQ
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3ff]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 446 bytes, Stack size 128 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[441]"></a>GUI__DrawBitmap16bpp</STRONG> (Thumb, 648 bytes, Stack size 112 bytes, gui__drawbitmap16bpp.o(i.GUI__DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap444_12
</UL>

<P><STRONG><a name="[266]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 510 bytes, Stack size 136 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI__DrawTwinArc2 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[22f]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 622 bytes, Stack size 152 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI__DrawTwinArc4 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[5b1]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 384 bytes, Stack size 12 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>

<P><STRONG><a name="[440]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[43a]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
</UL>

<P><STRONG><a name="[388]"></a>GUI__GetLineDistX</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[387]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[3ad]"></a>GUI__GetNumChars</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_uc.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[240]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[43f]"></a>GUI__HandleEOLine</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui__private.o(i.GUI__HandleEOLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__HandleEOLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[467]"></a>GUI__IntersectRect</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gui__private.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[38c]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui__private.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[43e]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[443]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[18]"></a>GUI__MixColors</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[359]"></a>GUI__Read16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>

<P><STRONG><a name="[35a]"></a>GUI__Read32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read32))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine_RGB
</UL>

<P><STRONG><a name="[29d]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[334]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[3eb]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui__private.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
</UL>

<P><STRONG><a name="[22a]"></a>GUI__SetText</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, gui__private.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[3f8]"></a>GUI__SinHQ</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, gui__sinhq.o(i.GUI__SinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[38f]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[390]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[57c]"></a>GUI__memset</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, gui__private.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[396]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
</UL>

<P><STRONG><a name="[631]"></a>GUI__strcmp</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strcmp), UNUSED)

<P><STRONG><a name="[4c9]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
</UL>

<P><STRONG><a name="[448]"></a>HEADER_AddItem</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HEADER_AddItem &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[d9]"></a>HEADER_Callback</STRONG> (Thumb, 478 bytes, Stack size 48 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = HEADER_Callback &rArr; _HandlePID &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[44b]"></a>HEADER_CreateEx</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[44c]"></a>HEADER_CreateUser</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[2d]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 686 bytes, Stack size 80 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = HEADER_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(i.GUIDEMO_Main)
<LI> header.o(.data)
</UL>
<P><STRONG><a name="[450]"></a>HEADER_GetHeight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[452]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[453]"></a>HEADER_GetNumItems</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[454]"></a>HEADER_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, header.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HEADER_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[318]"></a>HEADER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, header_skin.o(i.HEADER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[455]"></a>HEADER_SetDirIndicator</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, header.o(i.HEADER_SetDirIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HEADER_SetDirIndicator &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[456]"></a>HEADER_SetDragLimit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, header.o(i.HEADER_SetDragLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HEADER_SetDragLimit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[457]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[461]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[47a]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_I2C_Config
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>

<P><STRONG><a name="[458]"></a>I2C_DeInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>

<P><STRONG><a name="[45d]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[24d]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[251]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f4xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[45a]"></a>I2C_Init</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, stm32f4xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_I2C_Config
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>

<P><STRONG><a name="[462]"></a>I2C_NACKPositionConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_NACKPositionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[45c]"></a>I2C_ReadDataBuffer</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.I2C_ReadDataBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NACKPositionConfig
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_Z
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_Y
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_X
</UL>

<P><STRONG><a name="[464]"></a>I2C_ReadDeviceRegister</STRONG> (Thumb, 416 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.I2C_ReadDeviceRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I2C_ReadDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadID
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IOAFConfig
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_FnctCmd
</UL>

<P><STRONG><a name="[463]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[45f]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[460]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[482]"></a>I2C_SoftwareResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_SoftwareResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>

<P><STRONG><a name="[465]"></a>I2C_WriteDeviceRegister</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.I2C_WriteDeviceRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Config
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Reset
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IOAFConfig
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_FnctCmd
</UL>

<P><STRONG><a name="[2f3]"></a>ICONVIEW_AddBitmapItem</STRONG> (Thumb, 138 bytes, Stack size 80 bytes, iconview.o(i.ICONVIEW_AddBitmapItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = ICONVIEW_AddBitmapItem &rArr; ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[dd]"></a>ICONVIEW_Callback</STRONG> (Thumb, 1122 bytes, Stack size 176 bytes, iconview.o(i.ICONVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = ICONVIEW_Callback &rArr; ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_CreateUser)
</UL>
<P><STRONG><a name="[2f2]"></a>ICONVIEW_CreateEx</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, iconview.o(i.ICONVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = ICONVIEW_CreateEx &rArr; ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[46a]"></a>ICONVIEW_CreateUser</STRONG> (Thumb, 152 bytes, Stack size 72 bytes, iconview.o(i.ICONVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
</UL>

<P><STRONG><a name="[de]"></a>ICONVIEW_OwnerDraw</STRONG> (Thumb, 530 bytes, Stack size 96 bytes, iconview.o(i.ICONVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ICONVIEW_OwnerDraw &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_CreateUser)
</UL>
<P><STRONG><a name="[2f4]"></a>ICONVIEW_SetBkColor</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ICONVIEW_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2f7]"></a>ICONVIEW_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ICONVIEW_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2f6]"></a>ICONVIEW_SetIconAlign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetIconAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ICONVIEW_SetIconAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2f9]"></a>ICONVIEW_SetSel</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = ICONVIEW_SetSel &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2f5]"></a>ICONVIEW_SetSpace</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ICONVIEW_SetSpace &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2fc]"></a>ICONVIEW_SetTextAlign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ICONVIEW_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2fb]"></a>ICONVIEW_SetTextColor</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ICONVIEW_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[db]"></a>ICONVIEW__DrawText</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, iconview.o(i.ICONVIEW__DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ICONVIEW__DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[466]"></a>ICONVIEW__ManageAutoScroll</STRONG> (Thumb, 304 bytes, Stack size 88 bytes, iconview.o(i.ICONVIEW__ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[46e]"></a>IOE_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = IOE_Config &rArr; IOE_TP_Config &rArr; IOE_IOAFConfig &rArr; I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_I2C_Config
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Config
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Reset
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IsOperational
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_FnctCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[473]"></a>IOE_FnctCmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.IOE_FnctCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = IOE_FnctCmd &rArr; I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Config
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[47b]"></a>IOE_IOAFConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.IOE_IOAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = IOE_IOAFConfig &rArr; I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Config
</UL>

<P><STRONG><a name="[471]"></a>IOE_IsOperational</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_IsOperational))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = IOE_IsOperational &rArr; IOE_ReadID &rArr; I2C_ReadDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[47c]"></a>IOE_ReadID</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_ReadID &rArr; I2C_ReadDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IsOperational
</UL>

<P><STRONG><a name="[472]"></a>IOE_Reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_Reset &rArr; I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[474]"></a>IOE_TP_Config</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_TP_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = IOE_TP_Config &rArr; IOE_IOAFConfig &rArr; I2C_WriteDeviceRegister &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IOAFConfig
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_FnctCmd
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[47e]"></a>IOE_TP_GetState</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32f429i_discovery_ioe.o(i.IOE_TP_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = IOE_TP_GetState &rArr; IOE_TP_Read_Y &rArr; I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_Z
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_Y
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Read_X
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_Update
</UL>

<P><STRONG><a name="[45e]"></a>IOE_TimeoutUserCallback</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32f429i_discovery_ioe.o(i.IOE_TimeoutUserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SoftwareResetCmd
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_IsOperational
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteDeviceRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDeviceRegister
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>

<P><STRONG><a name="[3d]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(.data)
</UL>
<P><STRONG><a name="[43b]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[483]"></a>LCD_AF_GPIOConfig</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, lcd_rgb.o(i.LCD_AF_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_AF_GPIOConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[484]"></a>LCD_ChipSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd_rgb.o(i.LCD_ChipSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_ChipSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[36c]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[162]"></a>LCD_Color2Index_8666</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, guicc_8666.o(i.LCD_Color2Index_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[487]"></a>LCD_CtrlLinesConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lcd_rgb.o(i.LCD_CtrlLinesConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_CtrlLinesConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[488]"></a>LCD_CtrlLinesWrite</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lcd_rgb.o(i.LCD_CtrlLinesWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
</UL>

<P><STRONG><a name="[282]"></a>LCD_DrawBitmap</STRONG> (Thumb, 628 bytes, Stack size 80 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[c4]"></a>LCD_DrawHLine</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[179]"></a>LCD_DrawPixel</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>LCD_DrawVLine</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[249]"></a>LCD_FillRect</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_FillRect
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[2d3]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[447]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBytesPerLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>

<P><STRONG><a name="[3a8]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
</UL>

<P><STRONG><a name="[39e]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[2d6]"></a>LCD_GetDevCap</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcd_info.o(i.LCD_GetDevCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetDevCap
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[5b8]"></a>LCD_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetDevFunc))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[48b]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetMirrorXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[48c]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetMirrorYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[442]"></a>LCD_GetNextPixelAPI</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i.LCD_GetNextPixelAPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNextPixelAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[48d]"></a>LCD_GetNumColors</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[48e]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[48f]"></a>LCD_GetNumLayers</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[490]"></a>LCD_GetPalette</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[444]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[491]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[3ab]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[492]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetSwapXYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[3cd]"></a>LCD_GetVXSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[3e1]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[342]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetVXSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[2fe]"></a>LCD_GetVYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[3e2]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2c7]"></a>LCD_GetXSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3b3]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[3df]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerPos
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3b6]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetXSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2c8]"></a>LCD_GetYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3b4]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[3e0]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerPos
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3b5]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetYSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[493]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1f]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[344]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[494]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfColor2IndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfColor2IndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[3d0]"></a>LCD_GetpfIndex2ColorEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfIndex2ColorEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfIndex2ColorEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[343]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[118]"></a>LCD_Index2Color_444_12</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_444_12_index2color.o(i.LCD_Index2Color_444_12))
<BR>[Address Reference Count : 2]<UL><LI> gui_drawbitmap_444.o(.constdata)
<LI> gui_drawbitmap_444.o(i._DrawBitmap444_12)
</UL>
<P><STRONG><a name="[117]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_565.o(i.LCD_Index2Color_565))
<BR>[Address Reference Count : 3]<UL><LI> gui_drawbitmap_565.o(i._DrawBitmap)
<LI> gui_drawbitmap_565.o(.constdata)
<LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>LCD_Index2Color_8666</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, guicc_8666.o(i.LCD_Index2Color_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 3]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> gui_drawbitmap_24.o(.constdata)
<LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 7]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> guicc_8888.o(.constdata)
<LI> lcd_rlealpha.o(i._Draw)
<LI> lcd_rlealpha.o(i._DrawClip)
<LI> guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[111]"></a>LCD_Index2Color_M555</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_m555_index2color.o(i.LCD_Index2Color_M555))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[1ba]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1bf]"></a>LCD_Index2Color_M888</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guicc_m888_index2color.o(i.LCD_Index2Color_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[495]"></a>LCD_Init</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, lcd_rgb.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[49d]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[49e]"></a>LCD_InitLUT</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[497]"></a>LCD_PowerOn</STRONG> (Thumb, 652 bytes, Stack size 8 bytes, lcd_rgb.o(i.LCD_PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_PowerOn &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[3cf]"></a>LCD_ReadRect</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lcd_readrect.o(i.LCD_ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_ReadRect &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[496]"></a>LCD_SPIConfig</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, lcd_rgb.o(i.LCD_SPIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[41f]"></a>LCD_SelectLCD</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[27b]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4b2]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[4af]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[3d7]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[28f]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3a0]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[248]"></a>LCD_SetDevFunc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_FillRect
</UL>

<P><STRONG><a name="[3b7]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[290]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[49f]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[11e]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i._FlushLine)
</UL>
<P><STRONG><a name="[3ec]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lcd.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[422]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[423]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[4b0]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVRAMAddrEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4b1]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[424]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[3d6]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[4a9]"></a>LCD_WriteCommand</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lcd_rgb.o(i.LCD_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteCommand &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[4aa]"></a>LCD_WriteData</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd_rgb.o(i.LCD_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[3b0]"></a>LCD_X_Config</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, guidrv_stm32f429i_discovery.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColorsBulk
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColors
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncGetpPalConvTable
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncAlphaBlending
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M888_SetCustColorConv
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M8888I_SetCustColorConv
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M565_SetCustColorConv
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M4444I_SetCustColorConv
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M1555I_SetCustColorConv
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[4be]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, guidrv_stm32f429i_discovery.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerPos
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerAlpha
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLUTEntry
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerEnableColorKeying
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[404]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 496 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3ef]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[4c4]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4c8]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[f3]"></a>LISTVIEW_Callback</STRONG> (Thumb, 1556 bytes, Stack size 136 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[151]"></a>LISTVIEW_CompareDec</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_CompareDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LISTVIEW_CompareDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>LISTVIEW_CompareText</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listview_setsort.o(i.LISTVIEW_CompareText))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW_CompareText &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[4d2]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[4d3]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 236 bytes, Stack size 72 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
</UL>

<P><STRONG><a name="[4d4]"></a>LISTVIEW_DecSel</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LISTVIEW_DecSel &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4d5]"></a>LISTVIEW_EnableSort</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_EnableSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LISTVIEW_EnableSort &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4d6]"></a>LISTVIEW_GetHeader</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LISTVIEW_GetHeader &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4d7]"></a>LISTVIEW_GetNumColumns</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4d8]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LISTVIEW_GetNumRows &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4d9]"></a>LISTVIEW_IncSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LISTVIEW_IncSel &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4da]"></a>LISTVIEW_InsertRow</STRONG> (Thumb, 328 bytes, Stack size 64 bytes, listview_insertrow.o(i.LISTVIEW_InsertRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[f4]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[4dd]"></a>LISTVIEW_SetAutoScrollV</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = LISTVIEW_SetAutoScrollV &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4de]"></a>LISTVIEW_SetCompareFunc</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_SetCompareFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LISTVIEW_SetCompareFunc &rArr; LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4df]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4e0]"></a>LISTVIEW_SetItemBkColor</STRONG> (Thumb, 288 bytes, Stack size 80 bytes, listview_setitemcolor.o(i.LISTVIEW_SetItemBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LISTVIEW_SetItemBkColor &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4e3]"></a>LISTVIEW_SetLBorder</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_SetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTVIEW_SetLBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4e4]"></a>LISTVIEW_SetRBorder</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_SetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTVIEW_SetRBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[4e5]"></a>LISTVIEW_SetSort</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, listview_setsort.o(i.LISTVIEW_SetSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LISTVIEW_SetSort &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4e2]"></a>LISTVIEW__CreateCellInfoLocked</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, listview_setitemcolor.o(i.LISTVIEW__CreateCellInfoLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LISTVIEW__CreateCellInfoLocked &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
</UL>

<P><STRONG><a name="[4db]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
</UL>

<P><STRONG><a name="[4e1]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
</UL>

<P><STRONG><a name="[4c5]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__GetpRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[4c6]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[4ca]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[4dc]"></a>LISTVIEW__InvalidateRowAndBelow</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRowAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTVIEW__InvalidateRowAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[4cc]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[4c7]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 352 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4a3]"></a>LTDC_CLUTCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_CLUTCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[4a4]"></a>LTDC_CLUTInit</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, stm32f4xx_ltdc.o(i.LTDC_CLUTInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LTDC_CLUTInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[4c0]"></a>LTDC_Cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[4a7]"></a>LTDC_DitherCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_DitherCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[a6]"></a>LTDC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_IRQHandler &rArr; LTDC_ISR_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e7]"></a>LTDC_ISR_Handler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidrv_stm32f429i_discovery.o(i.LTDC_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_ISR_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerAddress
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[4a1]"></a>LTDC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[49c]"></a>LTDC_Init</STRONG> (Thumb, 378 bytes, Stack size 20 bytes, stm32f4xx_ltdc.o(i.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[4e8]"></a>LTDC_LayerAddress</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerAddress))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
</UL>

<P><STRONG><a name="[4a5]"></a>LTDC_LayerCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[4a2]"></a>LTDC_LayerInit</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[4a6]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerPos
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLayerAlpha
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetLUTEntry
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[47]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>PROGBAR_Callback</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[148]"></a>PROGBAR_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(.constdata)
</UL>
<P><STRONG><a name="[4ea]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
</UL>

<P><STRONG><a name="[30]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(i.GUIDEMO_Main)
<LI> progbar.o(.data)
</UL>
<P><STRONG><a name="[314]"></a>PROGBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, progbar_skin.o(i.PROGBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[4ec]"></a>PROGBAR_SetFont</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = PROGBAR_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[2e3]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR_SetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[4ed]"></a>PROGBAR_SetTextAlign</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = PROGBAR_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[2e2]"></a>PROGBAR_SetValue</STRONG> (Thumb, 398 bytes, Stack size 56 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[4f1]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[4ef]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[4ee]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[4f2]"></a>Pointer_Update</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.Pointer_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Pointer_Update &rArr; IOE_TP_GetState &rArr; IOE_TP_Read_Y &rArr; I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread1
</UL>

<P><STRONG><a name="[476]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread2
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO_Config
</UL>

<P><STRONG><a name="[4ff]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[475]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
</UL>

<P><STRONG><a name="[459]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[477]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_GPIO_Config
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Config
</UL>

<P><STRONG><a name="[507]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[45b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[49b]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[499]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[49a]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[498]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLSAIConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[4f3]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SCROLLBAR_AddValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[f8]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 1208 bytes, Stack size 112 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[4fa]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, scrollbar.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[4fb]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 266 bytes, Stack size 72 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[42]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(i.GUIDEMO_Main)
<LI> scrollbar.o(.data)
</UL>
<P><STRONG><a name="[2a6]"></a>SCROLLBAR_GetValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SCROLLBAR_GetValue &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[316]"></a>SCROLLBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_skin.o(i.SCROLLBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[579]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[4fe]"></a>SDRAM_GPIOConfig</STRONG> (Thumb, 492 bytes, Stack size 16 bytes, sdram.o(i.SDRAM_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_GPIOConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[ab]"></a>SDRAM_Init</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, sdram.o(i.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SDRAM_Init &rArr; SDRAM_InitSequence &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[501]"></a>SDRAM_InitSequence</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, sdram.o(i.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_InitSequence &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[43]"></a>SLIDER_DrawSkinFlex</STRONG> (Thumb, 968 bytes, Stack size 40 bytes, slider_skinflex.o(i.SLIDER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = SLIDER_DrawSkinFlex &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(i.GUIDEMO_Main)
<LI> slider.o(.data)
</UL>
<P><STRONG><a name="[506]"></a>SLIDER_GetFlag</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, slider.o(i.SLIDER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SLIDER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[317]"></a>SLIDER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, slider_skin.o(i.SLIDER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[4ae]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[4ac]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[4b4]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
</UL>

<P><STRONG><a name="[4b3]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
</UL>

<P><STRONG><a name="[4ad]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[4a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SysTick_Handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, board.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SysTick_Handler &rArr; rt_tick_increase &rArr; rt_timer_check &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>TEXT_Callback</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[2ec]"></a>TEXT_CreateEx</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, text.o(i.TEXT_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = TEXT_CreateEx &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[149]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, text.o(i.TEXT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(.constdata)
</UL>
<P><STRONG><a name="[50c]"></a>TEXT_CreateUser</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>

<P><STRONG><a name="[2f0]"></a>TEXT_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, text.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2fa]"></a>TEXT_SetText</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, text.o(i.TEXT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2ed]"></a>TEXT_SetTextAlign</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text.o(i.TEXT_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2ee]"></a>TEXT_SetTextColor</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, text.o(i.TEXT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[2ef]"></a>TEXT_SetWrapMode</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, text.o(i.TEXT_SetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetWrapMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[50d]"></a>TREEVIEW_AttachItem</STRONG> (Thumb, 692 bytes, Stack size 112 bytes, treeview.o(i.TREEVIEW_AttachItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = TREEVIEW_AttachItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
</UL>

<P><STRONG><a name="[100]"></a>TREEVIEW_Callback</STRONG> (Thumb, 1598 bytes, Stack size 152 bytes, treeview.o(i.TREEVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = TREEVIEW_Callback &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateIndirect)
</UL>
<P><STRONG><a name="[15c]"></a>TREEVIEW_CreateIndirect</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TREEVIEW_CreateIndirect &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(.constdata)
</UL>
<P><STRONG><a name="[519]"></a>TREEVIEW_DecSel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = TREEVIEW_DecSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[51b]"></a>TREEVIEW_GetItem</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, treeview.o(i.TREEVIEW_GetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TREEVIEW_GetItem &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[51c]"></a>TREEVIEW_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TREEVIEW_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[51d]"></a>TREEVIEW_ITEM_Collapse</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TREEVIEW_ITEM_Collapse &rArr; _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[51e]"></a>TREEVIEW_ITEM_Expand</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TREEVIEW_ITEM_Expand &rArr; _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[51f]"></a>TREEVIEW_ITEM_GetInfo</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_ITEM_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TREEVIEW_ITEM_GetInfo &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[520]"></a>TREEVIEW_ITEM_SetImage</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, treeview.o(i.TREEVIEW_ITEM_SetImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TREEVIEW_ITEM_SetImage &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[521]"></a>TREEVIEW_IncSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = TREEVIEW_IncSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[522]"></a>TREEVIEW_InsertItem</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TREEVIEW_InsertItem &rArr; TREEVIEW_AttachItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[101]"></a>TREEVIEW_OwnerDraw</STRONG> (Thumb, 634 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TREEVIEW_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateIndirect)
</UL>
<P><STRONG><a name="[523]"></a>TREEVIEW_SetAutoScrollH</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, treeview.o(i.TREEVIEW_SetAutoScrollH))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = TREEVIEW_SetAutoScrollH &rArr; WM_SetScrollbarH &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[524]"></a>TREEVIEW_SetAutoScrollV</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, treeview.o(i.TREEVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = TREEVIEW_SetAutoScrollV &rArr; WM_SetScrollbarH &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[525]"></a>TREEVIEW_SetHasLines</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetHasLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TREEVIEW_SetHasLines &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[526]"></a>TREEVIEW_SetSelMode</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetSelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TREEVIEW_SetSelMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[528]"></a>USART1_GPIO_Config</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usart.o(i.USART1_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART1_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Config
</UL>

<P><STRONG><a name="[52b]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Config
</UL>

<P><STRONG><a name="[5e4]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_console_output
</UL>

<P><STRONG><a name="[529]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Config
</UL>

<P><STRONG><a name="[5e3]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_console_output
</UL>

<P><STRONG><a name="[49]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52a]"></a>Usart1_Config</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usart.o(i.Usart1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Usart1_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[225]"></a>WIDGET_AndState</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[44e]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[21d]"></a>WIDGET_HandleActive</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[222]"></a>WIDGET_OrState</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[5b4]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[4eb]"></a>WIDGET_SetEffect</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[52f]"></a>WIDGET_SetFocusable</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_SetFocusable &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[4fd]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[530]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WIDGET__EFFECT_DrawDown &rArr; WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[296]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[532]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[22e]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[4fc]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[533]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[3d2]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[534]"></a>WM_BringToBottom</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, wm_lib.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[25a]"></a>WM_BringToTop</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[5ba]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_lib.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[5c5]"></a>WM_CheckScrollPos</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, wm_lib.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[4f7]"></a>WM_CreateTimer</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[22d]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 330 bytes, Stack size 80 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[3d5]"></a>WM_Deactivate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[226]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[4f5]"></a>WM_DeleteTimer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[2fd]"></a>WM_DeleteWindow</STRONG> (Thumb, 396 bytes, Stack size 64 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_DeleteWindow &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>

<P><STRONG><a name="[264]"></a>WM_DisableMemdev</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_DisableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_DisableMemdev &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[2eb]"></a>WM_EnableMemdev</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_EnableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_EnableMemdev &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
</UL>

<P><STRONG><a name="[399]"></a>WM_Exec</STRONG> (Thumb, 900 bytes, Stack size 208 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[539]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[548]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[295]"></a>WM_GetClientRect</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>

<P><STRONG><a name="[451]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[36e]"></a>WM_GetClientWindow</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetClientWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[2ea]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[562]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[2e0]"></a>WM_GetDialogItem</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, wm_lib.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[272]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[370]"></a>WM_GetFocusedWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFocusedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_GetFocusedWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[46b]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[2a7]"></a>WM_GetId</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[44d]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[299]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 252 bytes, Stack size 56 bytes, wm_lib.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[273]"></a>WM_GetNextSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetNextSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[29e]"></a>WM_GetOrgX</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetOrgX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[29f]"></a>WM_GetOrgY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetOrgY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[27a]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[4f4]"></a>WM_GetScrollPartner</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, wm_lib.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[469]"></a>WM_GetScrollState</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2a8]"></a>WM_GetScrollbarH</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, wm_lib.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2a5]"></a>WM_GetScrollbarV</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, wm_lib.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[544]"></a>WM_GetUserData</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, wm_userdata.o(i.WM_GetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM_GetUserData &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[3f5]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetWindowOrgX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[545]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetWindowOrgY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[546]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
</UL>

<P><STRONG><a name="[547]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[271]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[d3]"></a>WM_HandlePID</STRONG> (Thumb, 1130 bytes, Stack size 144 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[510]"></a>WM_HasCaptured</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[25f]"></a>WM_HasFocus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2dd]"></a>WM_HideWindow</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[3b8]"></a>WM_Init</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2bd]"></a>WM_InvalidateRect</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>

<P><STRONG><a name="[22b]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextAlign
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>

<P><STRONG><a name="[553]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, wm_lib.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[554]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[555]"></a>WM_IsEnabled</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_IsEnabled &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[556]"></a>WM_IsFocusable</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, wm_lib.o(i.WM_IsFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_IsFocusable &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[31f]"></a>WM_IsVisible</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_lib.o(i.WM_IsVisible))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_IsVisible &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
</UL>

<P><STRONG><a name="[25e]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[31d]"></a>WM_MOTION_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wm_motion.o(i.WM_MOTION_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = WM_MOTION_Enable &rArr; _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
</UL>

<P><STRONG><a name="[55a]"></a>WM_MOTION_SetMotion</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, wm_motion.o(i.WM_MOTION_SetMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_MOTION_SetMotion &rArr; _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>

<P><STRONG><a name="[55b]"></a>WM_MOTION_SetMovement</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, wm_motion.o(i.WM_MOTION_SetMovement))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_MOTION_SetMovement &rArr; _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>

<P><STRONG><a name="[527]"></a>WM_MULTIBUF_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_multibuf.o(i.WM_MULTIBUF_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread2
</UL>

<P><STRONG><a name="[55c]"></a>WM_MakeModal</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_makemodal.o(i.WM_MakeModal))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = WM_MakeModal &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[278]"></a>WM_MoveChildTo</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, wm_lib.o(i.WM_MoveChildTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[560]"></a>WM_MoveTo</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>

<P><STRONG><a name="[277]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
</UL>

<P><STRONG><a name="[223]"></a>WM_NotifyParent</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, wm_lib.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_NotifyParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>

<P><STRONG><a name="[40e]"></a>WM_OnKey</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, wm_lib.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[54f]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[54e]"></a>WM_ReleaseCapture</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_ReleaseCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[276]"></a>WM_ResizeWindow</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, wm_lib.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[4f9]"></a>WM_RestartTimer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_Restart &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[54b]"></a>WM_Screen2hWin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_Screen2hWin &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[53a]"></a>WM_SelectWindow</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SelectWindow &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[52e]"></a>WM_SendMessage</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_ByWindow
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>

<P><STRONG><a name="[36f]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[53c]"></a>WM_SendToParent</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_SendToParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[30f]"></a>WM_SetCallback</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[4f8]"></a>WM_SetCapture</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_SetCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[25b]"></a>WM_SetCaptureMove</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, wm_setcapturemove.o(i.WM_SetCaptureMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[259]"></a>WM_SetFocus</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, wm_lib.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_SetFocus &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_IconView
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[260]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, wm_setfocusonnextchild.o(i.WM_SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[27d]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(i.WM_SetFocusOnPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[23c]"></a>WM_SetHasTrans</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[46d]"></a>WM_SetScrollState</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[4cf]"></a>WM_SetScrollValue</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_lib.o(i.WM_SetScrollValue))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[4e6]"></a>WM_SetScrollbarH</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WM_SetScrollbarH &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[46c]"></a>WM_SetScrollbarV</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[279]"></a>WM_SetSize</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[297]"></a>WM_SetUserClipRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[56a]"></a>WM_SetUserData</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, wm_userdata.o(i.WM_SetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM_SetUserData &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
</UL>

<P><STRONG><a name="[56b]"></a>WM_SetWindowPos</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_lib.o(i.WM_SetWindowPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = WM_SetWindowPos &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
</UL>

<P><STRONG><a name="[2dc]"></a>WM_ShowWindow</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
</UL>

<P><STRONG><a name="[567]"></a>WM_ValidateWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[569]"></a>WM__ActivateClipRect</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[54a]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm__private.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[540]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[53d]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__DeleteAssocTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[568]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[542]"></a>WM__ForEachDesc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm__private.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[53b]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[52d]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[564]"></a>WM__GetFocusedChild</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wm__private.o(i.WM__GetFocusedChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__GetFocusedChild
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[566]"></a>WM__GetLastSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetLastSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[244]"></a>WM__GetNextIVR</STRONG> (Thumb, 818 bytes, Stack size 72 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[338]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__private.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[339]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__private.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[535]"></a>WM__GetPrevSibling</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__GetPrevSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[565]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[26f]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeX))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[270]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[242]"></a>WM__InitIVRSearch</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[538]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[551]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[56f]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[53f]"></a>WM__InvalidateRect</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[536]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[262]"></a>WM__IsAncestor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[261]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsAncestorOrSelf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[235]"></a>WM__IsEnabled</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm__private.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
</UL>

<P><STRONG><a name="[55d]"></a>WM__IsInModalArea</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[557]"></a>WM__IsWindow</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[55f]"></a>WM__MoveWindow</STRONG> (Thumb, 256 bytes, Stack size 128 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[109]"></a>WM__Paint1</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM__Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wm.o(i.WM__PaintWinAndOverlays)
<LI> wm.o(i._PaintTransChildren)
</UL>
<P><STRONG><a name="[550]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wm__private.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[537]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[531]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__private.o(i.WM__Screen2Client))
<BR><BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>

<P><STRONG><a name="[25d]"></a>WM__SendMessage</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[54d]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[3e4]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, wm__private.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[561]"></a>WM__SendMsgNoData</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[55e]"></a>WM__SendPIDMessage</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
</UL>

<P><STRONG><a name="[54c]"></a>WM__SendTouchMessage</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendMessageIfEnabled &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[558]"></a>WM__SetMotionCallback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_touch.o(i.WM__SetMotionCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__SetMotionCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
</UL>

<P><STRONG><a name="[52c]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, wm__private.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5c6]"></a>__0sprintf$1</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[632]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[576]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[58d]"></a>__hardfp_ceil</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ceil.o(i.__hardfp_ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[58e]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3e9]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[5f6]"></a>__rt_ffs</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, kservice.o(i.__rt_ffs))
<BR><BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[633]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[634]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[635]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5c9]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[4ab]"></a>delay</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, lcd_rgb.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[3b2]"></a>emWin_LCD_Init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5d1]"></a>$Super$$main</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = $Super$$main &rArr; rt_thread_init &rArr; _rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_thread_entry
</UL>

<P><STRONG><a name="[144]"></a>main_thread_entry</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, components.o(i.main_thread_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main_thread_entry &rArr; $Super$$main &rArr; rt_thread_init &rArr; _rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_components_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> components.o(i.rt_application_init)
</UL>
<P><STRONG><a name="[430]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[5d5]"></a>rt_application_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, components.o(i.rt_application_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = rt_application_init &rArr; rt_thread_create &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[5de]"></a>rt_components_board_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, components.o(i.rt_components_board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_components_board_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[5d4]"></a>rt_components_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, components.o(i.rt_components_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_components_init
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_thread_entry
</UL>

<P><STRONG><a name="[5d7]"></a>rt_enter_critical</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scheduler.o(i.rt_enter_critical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_enter_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_console_output
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>

<P><STRONG><a name="[5d9]"></a>rt_exit_critical</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, scheduler.o(i.rt_exit_critical))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_console_output
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>

<P><STRONG><a name="[5db]"></a>rt_free</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, mem.o(i.rt_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
</UL>
<BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>

<P><STRONG><a name="[5e0]"></a>rt_heap_begin_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i.rt_heap_begin_get))
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[5df]"></a>rt_heap_end_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i.rt_heap_end_get))
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[5dd]"></a>rt_hw_board_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, board.o(i.rt_hw_board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = rt_hw_board_init &rArr; rt_system_heap_init &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_heap_end_get
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_heap_begin_get
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_components_board_init
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Config
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[5e2]"></a>rt_hw_console_output</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, board.o(i.rt_hw_console_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_hw_console_output &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
</UL>

<P><STRONG><a name="[208]"></a>rt_hw_hard_fault_exception</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, cpuport.o(i.rt_hw_hard_fault_exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = rt_hw_hard_fault_exception &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[5cd]"></a>rt_hw_stack_init</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, cpuport.o(i.rt_hw_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_hw_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_thread_init
</UL>

<P><STRONG><a name="[508]"></a>rt_interrupt_enter</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irq.o(i.rt_interrupt_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_interrupt_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[50a]"></a>rt_interrupt_leave</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irq.o(i.rt_interrupt_leave))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_interrupt_leave
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[431]"></a>rt_kprintf</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, kservice.o(i.rt_kprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_console_output
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread1
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_show_version
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_hard_fault_exception
</UL>

<P><STRONG><a name="[5ed]"></a>rt_malloc</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, mem.o(i.rt_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rt_malloc &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[5cc]"></a>rt_memset</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, kservice.o(i.rt_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_thread_init
</UL>

<P><STRONG><a name="[5ee]"></a>rt_object_allocate</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, object.o(i.rt_object_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rt_object_allocate &rArr; rt_malloc &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_information
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_insert_after
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strncpy
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_create
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
</UL>

<P><STRONG><a name="[5f2]"></a>rt_object_delete</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, object.o(i.rt_object_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_remove
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>

<P><STRONG><a name="[5f4]"></a>rt_object_detach</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, object.o(i.rt_object_detach))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_object_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5ef]"></a>rt_object_get_information</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, object.o(i.rt_object_get_information))
<BR><BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[5f5]"></a>rt_object_init</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, object.o(i.rt_object_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_information
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_insert_after
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
</UL>

<P><STRONG><a name="[607]"></a>rt_object_is_systemobject</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, object.o(i.rt_object_is_systemobject))
<BR><BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5da]"></a>rt_schedule</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, scheduler.o(i.rt_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch_interrupt
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_timeout
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5f9]"></a>rt_schedule_insert_thread</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, scheduler.o(i.rt_schedule_insert_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_schedule_insert_thread
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_timeout
</UL>

<P><STRONG><a name="[5fa]"></a>rt_schedule_remove_thread</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, scheduler.o(i.rt_schedule_remove_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_schedule_remove_thread
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[436]"></a>rt_sem_create</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ipc.o(i.rt_sem_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rt_sem_create &rArr; rt_object_allocate &rArr; rt_malloc &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[5fb]"></a>rt_sem_init</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ipc.o(i.rt_sem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_sem_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
</UL>

<P><STRONG><a name="[438]"></a>rt_sem_release</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ipc.o(i.rt_sem_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rt_sem_release &rArr; rt_ipc_list_resume &rArr; rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_isempty
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_list_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>

<P><STRONG><a name="[437]"></a>rt_sem_take</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, ipc.o(i.rt_sem_take))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_list_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>

<P><STRONG><a name="[5ff]"></a>rt_show_version</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kservice.o(i.rt_show_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = rt_show_version &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[614]"></a>rt_strlen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kservice.o(i.rt_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[5f0]"></a>rt_strncpy</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, kservice.o(i.rt_strncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[5e1]"></a>rt_system_heap_init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, mem.o(i.rt_system_heap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = rt_system_heap_init &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[600]"></a>rt_system_scheduler_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, scheduler.o(i.rt_system_scheduler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_system_scheduler_init
</UL>
<BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[602]"></a>rt_system_scheduler_start</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scheduler.o(i.rt_system_scheduler_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_system_scheduler_start
</UL>
<BR>[Calls]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch_to
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[604]"></a>rt_system_timer_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, timer.o(i.rt_system_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_system_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[616]"></a>rt_system_timer_thread_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(i.rt_system_timer_thread_init))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[5d6]"></a>rt_thread_create</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, thread.o(i.rt_thread_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = rt_thread_create &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_application_init
</UL>

<P><STRONG><a name="[433]"></a>rt_thread_delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, thread.o(i.rt_thread_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_thread_delay &rArr; rt_thread_sleep &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread1
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>

<P><STRONG><a name="[140]"></a>rt_thread_exit</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, thread.o(i.rt_thread_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rt_thread_exit &rArr; rt_timer_detach &rArr; rt_object_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_is_systemobject
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_insert_after
</UL>
<BR>[Address Reference Count : 1]<UL><LI> thread.o(i._rt_thread_init)
</UL>
<P><STRONG><a name="[609]"></a>rt_thread_idle_excute</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, idle.o(i.rt_thread_idle_excute))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = rt_thread_idle_excute &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_is_systemobject
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_has_defunct_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
</UL>

<P><STRONG><a name="[60b]"></a>rt_thread_idle_init</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, idle.o(i.rt_thread_idle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = rt_thread_idle_init &rArr; rt_thread_init &rArr; _rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[5d2]"></a>rt_thread_init</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, thread.o(i.rt_thread_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = rt_thread_init &rArr; _rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5e6]"></a>rt_thread_resume</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, thread.o(i.rt_thread_resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_list_resume
</UL>

<P><STRONG><a name="[434]"></a>rt_thread_self</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, thread.o(i.rt_thread_self))
<BR><BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_hard_fault_exception
</UL>

<P><STRONG><a name="[605]"></a>rt_thread_sleep</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, thread.o(i.rt_thread_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_thread_sleep &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
</UL>

<P><STRONG><a name="[5d3]"></a>rt_thread_startup</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, thread.o(i.rt_thread_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rt_thread_startup &rArr; rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_application_init
</UL>

<P><STRONG><a name="[5e8]"></a>rt_thread_suspend</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, thread.o(i.rt_thread_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_list_suspend
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[141]"></a>rt_thread_timeout</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, thread.o(i.rt_thread_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_thread_timeout &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> thread.o(i._rt_thread_init)
</UL>
<P><STRONG><a name="[60e]"></a>rt_thread_yield</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, thread.o(i.rt_thread_yield))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_thread_yield &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
</UL>

<P><STRONG><a name="[435]"></a>rt_tick_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.rt_tick_get))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
</UL>

<P><STRONG><a name="[509]"></a>rt_tick_increase</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, clock.o(i.rt_tick_increase))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_tick_increase &rArr; rt_timer_check &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[60f]"></a>rt_timer_check</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, timer.o(i.rt_timer_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_timer_check &rArr; rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_isempty
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
</UL>

<P><STRONG><a name="[5fd]"></a>rt_timer_control</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, timer.o(i.rt_timer_control))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[606]"></a>rt_timer_detach</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, timer.o(i.rt_timer_detach))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_timer_detach &rArr; rt_object_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[5ce]"></a>rt_timer_init</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, timer.o(i.rt_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_thread_init
</UL>

<P><STRONG><a name="[5fe]"></a>rt_timer_start</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, timer.o(i.rt_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_timer_start &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_insert_after
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[60d]"></a>rt_timer_stop</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, timer.o(i.rt_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
</UL>

<P><STRONG><a name="[5ec]"></a>rt_vsnprintf</STRONG> (Thumb, 800 bytes, Stack size 88 bytes, kservice.o(i.rt_vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strlen
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;skip_atoi
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
</UL>

<P><STRONG><a name="[21c]"></a>rtthread_startup</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, components.o(i.rtthread_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = rtthread_startup &rArr; rt_application_init &rArr; rt_thread_create &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_thread_init
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_init
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_init
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_show_version
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_application_init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[250]"></a>sEE_TIMEOUT_UserCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f429i_discovery_i2c_ee.o(i.sEE_TIMEOUT_UserCallback))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50b]"></a>SetSysClock</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[46f]"></a>IOE_GPIO_Config</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.IOE_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IOE_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TimeoutUserCallback
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[470]"></a>IOE_I2C_Config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, stm32f429i_discovery_ioe.o(i.IOE_I2C_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IOE_I2C_Config &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Config
</UL>

<P><STRONG><a name="[47f]"></a>IOE_TP_Read_X</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.IOE_TP_Read_X))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = IOE_TP_Read_X &rArr; I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
</UL>

<P><STRONG><a name="[480]"></a>IOE_TP_Read_Y</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f429i_discovery_ioe.o(i.IOE_TP_Read_Y))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = IOE_TP_Read_Y &rArr; I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
</UL>

<P><STRONG><a name="[481]"></a>IOE_TP_Read_Z</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f429i_discovery_ioe.o(i.IOE_TP_Read_Z))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_TP_Read_Z &rArr; I2C_ReadDataBuffer &rArr; IOE_TimeoutUserCallback &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadDataBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_GetState
</UL>

<P><STRONG><a name="[47d]"></a>delay</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, stm32f429i_discovery_ioe.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_TP_Config
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Reset
</UL>

<P><STRONG><a name="[504]"></a>delay</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, sdram.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[142]"></a>Thread1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Thread1))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Thread1 &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_kprintf
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[143]"></a>Thread2</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.Thread2))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = Thread2 &rArr; GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MULTIBUF_Enable
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[e0]"></a>CUSTOM_LCD_CopyBuffer</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CUSTOM_LCD_CopyBuffer &rArr; DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e1]"></a>CUSTOM_LCD_CopyRect</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_CopyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CUSTOM_LCD_CopyRect &rArr; DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[b0]"></a>CUSTOM_LCD_FillRect</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = CUSTOM_LCD_FillRect &rArr; GUI_GetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Fill
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidrv_stm32f429i_discovery.o(i.CUSTOM_LCD_FillRect)
<LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e6]"></a>Color2IndexBulk_M1555IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M1555IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Color2IndexBulk_M1555IDMA2D &rArr; DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[ea]"></a>Color2IndexBulk_M4444IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M4444IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Color2IndexBulk_M4444IDMA2D &rArr; DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e8]"></a>Color2IndexBulk_M565DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M565DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Color2IndexBulk_M565DMA2D &rArr; DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[ee]"></a>Color2IndexBulk_M8888IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M8888IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Color2IndexBulk_M8888IDMA2D &rArr; DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[ec]"></a>Color2IndexBulk_M888DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.Color2IndexBulk_M888DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Color2IndexBulk_M888DMA2D &rArr; DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[246]"></a>DMA2D_Copy</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, guidrv_stm32f429i_discovery.o(i.DMA2D_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap32bpp
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap16bpp
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_CopyRect
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[24a]"></a>DMA2D_Fill</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidrv_stm32f429i_discovery.o(i.DMA2D_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_Fill
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_FillRect
</UL>

<P><STRONG><a name="[ef]"></a>DMA_AlphaBlending</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.DMA_AlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DMA_AlphaBlending &rArr; DMA_AlphaBlendingBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertAlpha
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_AlphaBlendingBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[255]"></a>DMA_AlphaBlendingBulk</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, guidrv_stm32f429i_discovery.o(i.DMA_AlphaBlendingBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_AlphaBlendingBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_AlphaBlending
</UL>

<P><STRONG><a name="[24b]"></a>DMA_Color2IndexBulk</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, guidrv_stm32f429i_discovery.o(i.DMA_Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA_Color2IndexBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertAlpha_SwapRB
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color2IndexBulk_M888DMA2D
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color2IndexBulk_M8888IDMA2D
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color2IndexBulk_M565DMA2D
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color2IndexBulk_M4444IDMA2D
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color2IndexBulk_M1555IDMA2D
</UL>

<P><STRONG><a name="[257]"></a>DMA_ConvertColor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidrv_stm32f429i_discovery.o(i.DMA_ConvertColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[48a]"></a>DMA_DrawBitmapL8</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, guidrv_stm32f429i_discovery.o(i.DMA_DrawBitmapL8))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_DrawBitmapL8
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap8bpp
</UL>

<P><STRONG><a name="[258]"></a>DMA_Index2ColorBulk</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, guidrv_stm32f429i_discovery.o(i.DMA_Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertAlpha_SwapRB
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M888DMA2D
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888IDMA2D
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M565DMA2D
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M4444IDMA2D
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M1555IDMA2D
</UL>

<P><STRONG><a name="[5b9]"></a>DMA_LoadLUT</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guidrv_stm32f429i_discovery.o(i.DMA_LoadLUT))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[f1]"></a>DMA_MixColors</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, guidrv_stm32f429i_discovery.o(i.DMA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[4a8]"></a>DMA_MixColorsBulk</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, guidrv_stm32f429i_discovery.o(i.DMA_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_MixColorsBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MixColorsBulk
</UL>

<P><STRONG><a name="[245]"></a>GetBufferSize</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, guidrv_stm32f429i_discovery.o(i.GetBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap8bpp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap32bpp
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap16bpp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_FillRect
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_CopyRect
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[446]"></a>GetBytesPerLine</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i.GetBytesPerLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetBytesPerLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[252]"></a>GetPixelformat</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, guidrv_stm32f429i_discovery.o(i.GetPixelformat))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap8bpp
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Fill
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Copy
</UL>

<P><STRONG><a name="[254]"></a>InvertAlpha</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidrv_stm32f429i_discovery.o(i.InvertAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InvertAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MixColorsBulk
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_AlphaBlending
</UL>

<P><STRONG><a name="[256]"></a>InvertAlpha_SwapRB</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, guidrv_stm32f429i_discovery.o(i.InvertAlpha_SwapRB))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InvertAlpha_SwapRB
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[e3]"></a>LCD_DrawBitmap16bpp</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap16bpp &rArr; DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e4]"></a>LCD_DrawBitmap32bpp</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap32bpp &rArr; DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e2]"></a>LCD_DrawBitmap8bpp</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, guidrv_stm32f429i_discovery.o(i.LCD_DrawBitmap8bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawBitmap8bpp &rArr; DMA_DrawBitmapL8
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPixelformat
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DrawBitmapL8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[4a0]"></a>LCD_LL_Init</STRONG> (Thumb, 378 bytes, Stack size 112 bytes, guidrv_stm32f429i_discovery.o(i.LCD_LL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ITConfig
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_DitherCmd
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_CLUTInit
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_CLUTCmd
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPixelformat
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBytesPerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[f2]"></a>LCD_MixColorsBulk</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, guidrv_stm32f429i_discovery.o(i.LCD_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_MixColorsBulk &rArr; DMA_MixColorsBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertAlpha
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[4c3]"></a>LTDC_LayerEnableColorKeying</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, guidrv_stm32f429i_discovery.o(i.LTDC_LayerEnableColorKeying))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[4bf]"></a>LTDC_SetLUTEntry</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidrv_stm32f429i_discovery.o(i.LTDC_SetLUTEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LTDC_SetLUTEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[4c2]"></a>LTDC_SetLayerAlpha</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidrv_stm32f429i_discovery.o(i.LTDC_SetLayerAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_SetLayerAlpha
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[4c1]"></a>LTDC_SetLayerPos</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, guidrv_stm32f429i_discovery.o(i.LTDC_SetLayerPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LTDC_SetLayerPos &rArr; LCD_GetYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[e5]"></a>_Index2ColorBulk_M1555IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M1555IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M1555IDMA2D &rArr; DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e9]"></a>_Index2ColorBulk_M4444IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M4444IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M4444IDMA2D &rArr; DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[e7]"></a>_Index2ColorBulk_M565DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M565DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M565DMA2D &rArr; DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[ed]"></a>_Index2ColorBulk_M8888IDMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M8888IDMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M8888IDMA2D &rArr; DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[eb]"></a>_Index2ColorBulk_M888DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._Index2ColorBulk_M888DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M888DMA2D &rArr; DMA_Index2ColorBulk &rArr; DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[f0]"></a>_LCD_GetpPalConvTable</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, guidrv_stm32f429i_discovery.o(i._LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevFunc
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertAlpha_SwapRB
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_LoadLUT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i_discovery.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[bc]"></a>_DrawBk</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidemo.o(i._DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawBk &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[bb]"></a>_DrawBkCircle</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, guidemo.o(i._DrawBkCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _DrawBkCircle &rArr; GUI_MEMDEV_DrawPerspectiveX &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[bd]"></a>_DrawBkSimple</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo.o(i._DrawBkSimple))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _DrawBkSimple &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[ba]"></a>_FrameDrawSkinFlex</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, guidemo.o(i._FrameDrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = _FrameDrawSkinFlex &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2e4]"></a>_HideProgress</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo.o(i._HideProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _HideProgress &rArr; WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[2d9]"></a>_IntroduceDemo</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, guidemo.o(i._IntroduceDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>

<P><STRONG><a name="[31a]"></a>_Main</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, guidemo.o(i._Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2e1]"></a>_ShowProgress</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo.o(i._ShowProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _ShowProgress &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[31c]"></a>_UpdateControlText</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, guidemo.o(i._UpdateControlText))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _UpdateControlText &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[b9]"></a>_cbBk</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, guidemo.o(i._cbBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[b8]"></a>_cbEffect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidemo.o(i._cbEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _cbEffect &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[137]"></a>_cbFrameWinControl</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, guidemo.o(i._cbFrameWinControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _cbFrameWinControl &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i._Main)
</UL>
<P><STRONG><a name="[138]"></a>_cbFrameWinInfo</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, guidemo.o(i._cbFrameWinInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _cbFrameWinInfo &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i._Main)
</UL>
<P><STRONG><a name="[592]"></a>_DrawAlphaCircles</STRONG> (Thumb, 174 bytes, Stack size 136 bytes, guidemo_antialiasedtext.o(i._DrawAlphaCircles))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawAlphaCircles &rArr; GUI_AA_FillCircle &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
</UL>

<P><STRONG><a name="[5a6]"></a>_DrawSample</STRONG> (Thumb, 844 bytes, Stack size 56 bytes, guidemo_antialiasedtext.o(i._DrawSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _DrawSample &rArr; _DrawAlphaCircles &rArr; GUI_AA_FillCircle &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawAlphaCircles
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen
</UL>

<P><STRONG><a name="[2c2]"></a>_DrawScreen</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, guidemo_antialiasedtext.o(i._DrawScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = _DrawScreen &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSample
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTitleSizeY
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AntialiasedText
</UL>

<P><STRONG><a name="[2c6]"></a>_DemoBarGraph</STRONG> (Thumb, 340 bytes, Stack size 184 bytes, guidemo_bargraph.o(i._DemoBarGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
</UL>

<P><STRONG><a name="[584]"></a>_DrawDiagramAt</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidemo_bargraph.o(i._DrawDiagramAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _DrawDiagramAt &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>

<P><STRONG><a name="[583]"></a>_DrawLabel</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, guidemo_bargraph.o(i._DrawLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawLabel &rArr; GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>

<P><STRONG><a name="[5a1]"></a>_DrawBitmaps</STRONG> (Thumb, 258 bytes, Stack size 80 bytes, guidemo_bitmap.o(i._DrawBitmaps))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _DrawBitmaps &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
</UL>

<P><STRONG><a name="[4]"></a>_DrawScreenAlphaBitmaps</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, guidemo_bitmap.o(i._DrawScreenAlphaBitmaps))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _DrawScreenAlphaBitmaps &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_MixColors
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_DrawScreenGrayScale</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidemo_bitmap.o(i._DrawScreenGrayScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = _DrawScreenGrayScale &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_DrawScreenHighColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidemo_bitmap.o(i._DrawScreenHighColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = _DrawScreenHighColor &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>_DrawScreenPaletteBasedBitmaps</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, guidemo_bitmap.o(i._DrawScreenPaletteBasedBitmaps))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _DrawScreenPaletteBasedBitmaps &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPalette
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>_DrawScreen_BMP_GIF_JPG</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, guidemo_bitmap.o(i._DrawScreen_BMP_GIF_JPG))
<BR><BR>[Stack]<UL><LI>Max Depth = 1752<LI>Call Chain = _DrawScreen_BMP_GIF_JPG &rArr; GUI_JPEG_Draw &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[5a8]"></a>_SetPalette</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, guidemo_bitmap.o(i._SetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _SetPalette &rArr; GUIDEMO_MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
</UL>

<P><STRONG><a name="[5a9]"></a>_ShowGIF</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, guidemo_bitmap.o(i._ShowGIF))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _ShowGIF &rArr; GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSub
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[2de]"></a>_DispCursor</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, guidemo_cursor.o(i._DispCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = _DispCursor &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
</UL>

<P><STRONG><a name="[58b]"></a>_ShowCursorType</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, guidemo_cursor.o(i._ShowCursorType))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _ShowCursorType &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[5a2]"></a>_DrawFrame</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, guidemo_fading.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DrawFrame &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[5a4]"></a>_DrawLogo</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, guidemo_fading.o(i._DrawLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawLogo &rArr; GUI_MEMDEV_RotateHQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[5aa]"></a>_DrawText</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidemo_fading.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[5b0]"></a>_FadeScreens</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidemo_fading.o(i._FadeScreens))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = _FadeScreens &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
</UL>

<P><STRONG><a name="[2e6]"></a>_FadingDemo</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, guidemo_fading.o(i._FadingDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _FadingDemo &rArr; _FadeScreens &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Fading
</UL>

<P><STRONG><a name="[14e]"></a>_Paint0</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, guidemo_fading.o(i._Paint0))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _Paint0 &rArr; _DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_fading.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_Paint1</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, guidemo_fading.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _Paint1 &rArr; _DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_fading.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>_AddData_Heartbeat</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidemo_graph.o(i._AddData_Heartbeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _AddData_Heartbeat &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>_AddData_Sine</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, guidemo_graph.o(i._AddData_Sine))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _AddData_Sine &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[2e7]"></a>_GraphDemo</STRONG> (Thumb, 580 bytes, Stack size 80 bytes, guidemo_graph.o(i._GraphDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShiftRight
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
</UL>

<P><STRONG><a name="[5b6]"></a>_ShowGraph</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, guidemo_graph.o(i._ShowGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[136]"></a>_cbBk</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidemo_graph.o(i._cbBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(i._GraphDemo)
</UL>
<P><STRONG><a name="[302]"></a>_Delay</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidemo_imageflow.o(i._Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = _Delay &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[5a5]"></a>_DrawPerspective</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, guidemo_imageflow.o(i._DrawPerspective))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _DrawPerspective &rArr; GUI_MEMDEV_DrawPerspectiveX &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAnimated
</UL>

<P><STRONG><a name="[301]"></a>_DrawScreenAnimated</STRONG> (Thumb, 954 bytes, Stack size 168 bytes, guidemo_imageflow.o(i._DrawScreenAnimated))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = _DrawScreenAnimated &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPerspective
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[300]"></a>_GetImages</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, guidemo_imageflow.o(i._GetImages))
<BR><BR>[Stack]<UL><LI>Max Depth = 1752<LI>Call Chain = _GetImages &rArr; GUI_JPEG_Draw &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ImageFlow
</UL>

<P><STRONG><a name="[572]"></a>_Action</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, guidemo_listview.o(i._Action))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[573]"></a>_AddRow</STRONG> (Thumb, 162 bytes, Stack size 96 bytes, guidemo_listview.o(i._AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[30a]"></a>_DemoListview</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, guidemo_listview.o(i._DemoListview))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = _DemoListview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
</UL>

<P><STRONG><a name="[585]"></a>_InitListview</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, guidemo_listview.o(i._InitListview))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _InitListview &rArr; LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[31e]"></a>_RadialMenu</STRONG> (Thumb, 524 bytes, Stack size 72 bytes, guidemo_radialmenu.o(i._RadialMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = _RadialMenu &rArr; GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
</UL>

<P><STRONG><a name="[13a]"></a>_cbDraw</STRONG> (Thumb, 772 bytes, Stack size 64 bytes, guidemo_radialmenu.o(i._cbDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _cbDraw &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_radialmenu.o(i._RadialMenu)
</UL>
<P><STRONG><a name="[13b]"></a>_cbMotion</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, guidemo_radialmenu.o(i._cbMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _cbMotion &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_radialmenu.o(i._RadialMenu)
</UL>
<P><STRONG><a name="[325]"></a>_GetPixelsPerSecond</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, guidemo_speed.o(i._GetPixelsPerSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _GetPixelsPerSecond &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[574]"></a>_Action</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, guidemo_treeview.o(i._Action))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[326]"></a>_DemoTreeview</STRONG> (Thumb, 248 bytes, Stack size 104 bytes, guidemo_treeview.o(i._DemoTreeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
</UL>

<P><STRONG><a name="[5b7]"></a>_InitTreeview</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, guidemo_treeview.o(i._InitTreeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; WM_SetScrollbarH &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[575]"></a>_MoveSprite</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, guidemo_treeview.o(i._MoveSprite))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _MoveSprite &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[10d]"></a>_cbDialog</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidemo_treeview.o(i._cbDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _cbDialog &rArr; _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; WM_SetScrollbarH &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(i._DemoTreeview)
</UL>
<P><STRONG><a name="[57e]"></a>_CreateBitmap</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, guidemo_washingmachine.o(i._CreateBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _CreateBitmap &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[580]"></a>_CreateButton</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, guidemo_washingmachine.o(i._CreateButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _CreateButton &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[328]"></a>_DemoWashingMachine</STRONG> (Thumb, 452 bytes, Stack size 80 bytes, guidemo_washingmachine.o(i._DemoWashingMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _DemoWashingMachine &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
</UL>

<P><STRONG><a name="[596]"></a>_DrawBackground</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
</UL>

<P><STRONG><a name="[57f]"></a>_DrawGradientRoundBar</STRONG> (Thumb, 576 bytes, Stack size 144 bytes, guidemo_washingmachine.o(i._DrawGradientRoundBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[587]"></a>_ExecMachine</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._ExecMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _ExecMachine &rArr; WM_SetFocus &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[586]"></a>_ExecSpriteAnimation</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._ExecSpriteAnimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _ExecSpriteAnimation &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[5bd]"></a>_OnKeyMain</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._OnKeyMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _OnKeyMain &rArr; _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[5bf]"></a>_OnKeySub</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._OnKeySub))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _OnKeySub &rArr; WM_DeleteWindow &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[5c0]"></a>_OnPIDStateChangeSub</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._OnPIDStateChangeSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _OnPIDStateChangeSub &rArr; WM_DeleteWindow &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[5c1]"></a>_OnPaintMain</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._OnPaintMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _OnPaintMain &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[5c2]"></a>_OnPaintSub</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._OnPaintSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _OnPaintSub &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[5be]"></a>_OpenSubMenu</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guidemo_washingmachine.o(i._OpenSubMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
</UL>

<P><STRONG><a name="[10e]"></a>_cbBkWin</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_washingmachine.o(i._cbBkWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _cbBkWin &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[110]"></a>_cbButton</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, guidemo_washingmachine.o(i._cbButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _cbButton &rArr; _CreateButton &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[10f]"></a>_cbMain</STRONG> (Thumb, 342 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._cbMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _cbMain &rArr; _CreateBitmap &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[13f]"></a>_cbStatus</STRONG> (Thumb, 482 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._cbStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _cbStatus &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._cbMain)
</UL>
<P><STRONG><a name="[139]"></a>_cbSubMenu</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._cbSubMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _cbSubMenu &rArr; _OnPaintSub &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._OpenSubMenu)
</UL>
<P><STRONG><a name="[57d]"></a>_CopyFromLCD</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidemo_zoomandrotate.o(i._CopyFromLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _CopyFromLCD &rArr; GUIDEMO_HideCursor &rArr; GUI_CURSOR_Hide &rArr; GUI_SPRITE_SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
</UL>

<P><STRONG><a name="[329]"></a>_DemoZoomAndRotate</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, guidemo_zoomandrotate.o(i._DemoZoomAndRotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = _DemoZoomAndRotate &rArr; _RotateAndZoomImage &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShiftImage
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RotateAndZoomImage
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImage
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ZoomAndRotate
</UL>

<P><STRONG><a name="[588]"></a>_GetImage</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, guidemo_zoomandrotate.o(i._GetImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _GetImage &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
</UL>

<P><STRONG><a name="[589]"></a>_RotateAndZoomImage</STRONG> (Thumb, 924 bytes, Stack size 72 bytes, guidemo_zoomandrotate.o(i._RotateAndZoomImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = _RotateAndZoomImage &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyFromLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
</UL>

<P><STRONG><a name="[58a]"></a>_ShiftImage</STRONG> (Thumb, 2120 bytes, Stack size 120 bytes, guidemo_zoomandrotate.o(i._ShiftImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = _ShiftImage &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyFromLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoZoomAndRotate
</UL>

<P><STRONG><a name="[204]"></a>rti_board_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(i.rti_board_end))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.1.end)
</UL>
<P><STRONG><a name="[203]"></a>rti_board_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(i.rti_board_start))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.0.end)
</UL>
<P><STRONG><a name="[205]"></a>rti_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(i.rti_end))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.6.end)
</UL>
<P><STRONG><a name="[202]"></a>rti_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(i.rti_start))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.0)
</UL>
<P><STRONG><a name="[60a]"></a>_has_defunct_thread</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, idle.o(i._has_defunct_thread))
<BR><BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>

<P><STRONG><a name="[145]"></a>rt_thread_idle_entry</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, idle.o(i.rt_thread_idle_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = rt_thread_idle_entry &rArr; rt_thread_idle_excute &rArr; rt_object_delete &rArr; rt_free &rArr; rt_kprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_excute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> idle.o(i.rt_thread_idle_init)
</UL>
<P><STRONG><a name="[5e5]"></a>rt_ipc_list_resume</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ipc.o(i.rt_ipc_list_resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_ipc_list_resume &rArr; rt_thread_resume &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
</UL>

<P><STRONG><a name="[5e7]"></a>rt_ipc_list_suspend</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ipc.o(i.rt_ipc_list_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_insert_before
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>

<P><STRONG><a name="[5ea]"></a>rt_ipc_object_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ipc.o(i.rt_ipc_object_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_ipc_object_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_create
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
</UL>

<P><STRONG><a name="[5eb]"></a>rt_list_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ipc.o(i.rt_list_init))
<BR><BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_object_init
</UL>

<P><STRONG><a name="[5e9]"></a>rt_list_insert_before</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ipc.o(i.rt_list_insert_before))
<BR><BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ipc_list_suspend
</UL>

<P><STRONG><a name="[5fc]"></a>rt_list_isempty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ipc.o(i.rt_list_isempty))
<BR><BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
</UL>

<P><STRONG><a name="[615]"></a>print_number</STRONG> (Thumb, 400 bytes, Stack size 60 bytes, kservice.o(i.print_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = print_number
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[613]"></a>skip_atoi</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, kservice.o(i.skip_atoi))
<BR><BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[5dc]"></a>plug_holes</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, mem.o(i.plug_holes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = plug_holes
</UL>
<BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>

<P><STRONG><a name="[5f1]"></a>rt_list_insert_after</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, object.o(i.rt_list_insert_after))
<BR><BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[5f3]"></a>rt_list_remove</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, object.o(i.rt_list_remove))
<BR><BR>[Called By]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
</UL>

<P><STRONG><a name="[601]"></a>rt_list_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scheduler.o(i.rt_list_init))
<BR><BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_init
</UL>

<P><STRONG><a name="[5cb]"></a>_rt_thread_init</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, thread.o(i._rt_thread_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
</UL>

<P><STRONG><a name="[608]"></a>rt_list_insert_after</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, thread.o(i.rt_list_insert_after))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_exit
</UL>

<P><STRONG><a name="[60c]"></a>rt_list_remove</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, thread.o(i.rt_list_remove))
<BR><BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_timeout
</UL>

<P><STRONG><a name="[5cf]"></a>_rt_timer_init</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, timer.o(i._rt_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _rt_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
</UL>

<P><STRONG><a name="[610]"></a>_rt_timer_remove</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, timer.o(i._rt_timer_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rt_timer_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
</UL>

<P><STRONG><a name="[5d0]"></a>rt_list_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.rt_list_init))
<BR><BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_init
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_timer_init
</UL>

<P><STRONG><a name="[612]"></a>rt_list_insert_after</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.rt_list_insert_after))
<BR><BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
</UL>

<P><STRONG><a name="[611]"></a>rt_list_isempty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.rt_list_isempty))
<BR><BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
</UL>

<P><STRONG><a name="[17]"></a>_DrawCharAA4_Trans</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, guiaa_char4.o(i._DrawCharAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawCharAA4_Trans &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_char4.o(.data)
</UL>
<P><STRONG><a name="[c0]"></a>_DrawHLine</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[33f]"></a>_FlushLine</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[bf]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[160]"></a>_Color2IndexBulk_1616I</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, guicc_1616i.o(i._Color2IndexBulk_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Color2IndexBulk_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>_Color2Index_1616I</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_1616i.o(i._Color2Index_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>_GetIndexMask_1616I</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_1616i.o(i._GetIndexMask_1616I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>_Index2ColorBulk_1616I</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guicc_1616i.o(i._Index2ColorBulk_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2ColorBulk_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>_Index2Color_1616I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_1616i.o(i._Index2Color_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>_GetIndexMask_8666</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_8666.o(i._GetIndexMask_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_Color2IndexBulk_88666I</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, guicc_88666i.o(i._Color2IndexBulk_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Color2IndexBulk_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>_Color2Index_88666I</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicc_88666i.o(i._Color2Index_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_GetIndexMask_88666I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_88666i.o(i._GetIndexMask_88666I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>_Index2ColorBulk_88666I</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, guicc_88666i.o(i._Index2ColorBulk_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2ColorBulk_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>_Index2Color_88666I</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guicc_88666i.o(i._Index2Color_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>_Color2IndexBulk_M1555I</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, guicc_m1555i.o(i._Color2IndexBulk_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_Color2Index_M1555I</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, guicc_m1555i.o(i._Color2Index_M1555I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>_GetIndexMask_M1555I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m1555i.o(i._GetIndexMask_M1555I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>_Index2ColorBulk_M1555I</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, guicc_m1555i.o(i._Index2ColorBulk_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>_Index2Color_M1555I</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, guicc_m1555i.o(i._Index2Color_M1555I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>_Color2IndexBulk_M4444I</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, guicc_m4444i.o(i._Color2IndexBulk_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[16f]"></a>_Color2Index_M4444I</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, guicc_m4444i.o(i._Color2Index_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Color2Index_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>_GetIndexMask_M4444I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m4444i.o(i._GetIndexMask_M4444I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>_Index2ColorBulk_M4444I</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, guicc_m4444i.o(i._Index2ColorBulk_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>_Index2Color_M4444I</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, guicc_m4444i.o(i._Index2Color_M4444I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[177]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Color2IndexBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>_Color2Index_M8888I</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_m8888i.o(i._Color2Index_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m8888i.o(i._GetIndexMask_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Index2ColorBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[348]"></a>_AddFreeMemory</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[346]"></a>_Alloc</STRONG> (Thumb, 480 bytes, Stack size 48 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[578]"></a>_EnlargeBlocks</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + In Cycle
<LI>Call Chain = _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[349]"></a>_InitOnce</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[34b]"></a>_RemoveFreeBlock</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[34a]"></a>_RemoveHoles</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[357]"></a>_Draw</STRONG> (Thumb, 2040 bytes, Stack size 192 bytes, gui_bmp.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _Draw &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
</UL>

<P><STRONG><a name="[591]"></a>_DrawBitmap_RGB</STRONG> (Thumb, 288 bytes, Stack size 152 bytes, gui_bmp.o(i._DrawBitmap_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[1a]"></a>_DrawLine_RGB</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gui_bmp.o(i._DrawLine_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawLine_RGB
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_bmp.o(i._DrawBitmap_RGB)
<LI> gui_bmp.o(.data)
<LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[58f]"></a>_GetClipParam</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, gui_bmp.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[590]"></a>_GetEarlyOut</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, gui_bmp.o(i._GetEarlyOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetEarlyOut
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[112]"></a>_Index2ColorBitfields</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_bmp.o(i._Index2ColorBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBitfields &rArr; _ManageBitfields
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[35b]"></a>_ManageBitfields</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, gui_bmp.o(i._ManageBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ManageBitfields
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBitfields
</UL>

<P><STRONG><a name="[1e]"></a>_NextPixel_End</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_End &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[5bb]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gui_bmp.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[1d]"></a>_NextPixel_NextLine</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>_NextPixel_Start</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_bmp.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[284]"></a>Draw8Point</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, gui_circ.o(i.Draw8Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[c9]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI_Init)
</UL>
<P><STRONG><a name="[c2]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_cursor.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_cursor.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[23e]"></a>CL_DispChar</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[17a]"></a>_DrawBitmap</STRONG> (Thumb, 458 bytes, Stack size 72 bytes, gui_drawbitmap_24.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_24.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>_DrawBitmap444_12</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_444.o(i._DrawBitmap444_12))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawBitmap444_12 &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_444.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_DrawBitmap</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_565.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawBitmap &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_565.o(.constdata)
</UL>
<P><STRONG><a name="[598]"></a>_DrawBitmap</STRONG> (Thumb, 1308 bytes, Stack size 136 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[17e]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitmapHW_8888 &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[17d]"></a>_DrawBitmap_8888</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[20]"></a>_SetPixelAlpha</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_drawbitmap_8888.o(i._SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.data)
</UL>
<P><STRONG><a name="[17f]"></a>_Color2Index</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_enablealpha.o(i._Color2Index))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>_Color2IndexBulk</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gui_enablealpha.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[184]"></a>_DrawBitmap</STRONG> (Thumb, 384 bytes, Stack size 88 bytes, gui_enablealpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawBitmap &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>_DrawHLine</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_enablealpha.o(i._DrawHLine))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>_DrawVLine</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_enablealpha.o(i._DrawVLine))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>_FillRect</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_enablealpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18c]"></a>_GetDevFunc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>_GetIndexMask</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetIndexMask))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18f]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>_Index2Color</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_enablealpha.o(i._Index2Color))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>_Index2ColorBulk</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gui_enablealpha.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[599]"></a>_ManageAlpha</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_enablealpha.o(i._ManageAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _ManageAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDrawMode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[c5]"></a>_OnExit</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_enablealpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(i.GUI_EnableAlpha)
</UL>
<P><STRONG><a name="[191]"></a>_SetBkColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_enablealpha.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetBkColor &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>_SetColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_enablealpha.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetColor &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>_SetDrawMode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_enablealpha.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetDrawMode &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18b]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[189]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_enablealpha.o(i._SetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[18a]"></a>_XorPixel</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_enablealpha.o(i._XorPixel))
<BR>[Address Reference Count : 1]<UL><LI> gui_enablealpha.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>_ClearUnusedPixels</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gui_gif.o(i._ClearUnusedPixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClearUnusedPixels &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[c8]"></a>_DrawFromDataBlock</STRONG> (Thumb, 572 bytes, Stack size 128 bytes, gui_gif.o(i._DrawFromDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawFromDataBlock &rArr; GUI_GIF__GetNextByte &rArr; _GetDataBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[3a4]"></a>_GetDataBlock</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_gif.o(i._GetDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[39d]"></a>_GetImageDimension</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gui_gif.o(i._GetImageDimension))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
</UL>

<P><STRONG><a name="[3a3]"></a>_GetSizeAndColorTable</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_gif.o(i._GetSizeAndColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[3c4]"></a>_CalcMCUBlockOrder</STRONG> (Thumb, 582 bytes, Stack size 72 bytes, gui_jpeg.o(i._CalcMCUBlockOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[57a]"></a>_CoeffBufferGetP_Locked</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gui_jpeg.o(i._CoeffBufferGetP_Locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[ce]"></a>_DecodeBlockAC_First</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, gui_jpeg.o(i._DecodeBlockAC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DecodeBlockAC_First &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__InitDraw)
</UL>
<P><STRONG><a name="[116]"></a>_DecodeBlockAC_FirstBanding</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, gui_jpeg.o(i._DecodeBlockAC_FirstBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DecodeBlockAC_FirstBanding &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._Draw)
</UL>
<P><STRONG><a name="[cd]"></a>_DecodeBlockAC_Refine</STRONG> (Thumb, 484 bytes, Stack size 72 bytes, gui_jpeg.o(i._DecodeBlockAC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DecodeBlockAC_Refine &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__InitDraw)
</UL>
<P><STRONG><a name="[115]"></a>_DecodeBlockAC_RefineBanding</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_jpeg.o(i._DecodeBlockAC_RefineBanding))
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._Draw)
</UL>
<P><STRONG><a name="[cb]"></a>_DecodeBlockDC_First</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DecodeBlockDC_First &rArr; _HuffDecode &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__InitDraw)
</UL>
<P><STRONG><a name="[113]"></a>_DecodeBlockDC_FirstBanding</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_jpeg.o(i._DecodeBlockDC_FirstBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DecodeBlockDC_FirstBanding &rArr; _HuffDecode &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._Draw)
</UL>
<P><STRONG><a name="[cc]"></a>_DecodeBlockDC_Refine</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DecodeBlockDC_Refine &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__InitDraw)
</UL>
<P><STRONG><a name="[114]"></a>_DecodeBlockDC_RefineBanding</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_jpeg.o(i._DecodeBlockDC_RefineBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DecodeBlockDC_RefineBanding &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._Draw)
</UL>
<P><STRONG><a name="[3c0]"></a>_DecodeNextRow</STRONG> (Thumb, 1012 bytes, Stack size 112 bytes, gui_jpeg.o(i._DecodeNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DecodeNextRow &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[3c5]"></a>_DecodeScanProg</STRONG> (Thumb, 552 bytes, Stack size 112 bytes, gui_jpeg.o(i._DecodeScanProg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DecodeScanProg &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[3ba]"></a>_Draw</STRONG> (Thumb, 1614 bytes, Stack size 152 bytes, gui_jpeg.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1664<LI>Call Chain = _Draw &rArr; GUI_JPEG__InitDraw &rArr; _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
</UL>

<P><STRONG><a name="[581]"></a>_GetBitsNoMarker</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, gui_jpeg.o(i._GetBitsNoMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[5c3]"></a>_GetInt</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
</UL>

<P><STRONG><a name="[11f]"></a>_GetStuff</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_jpeg.o(i._GetStuff))
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._GetBitsNoMarker)
</UL>
<P><STRONG><a name="[cf]"></a>_GetU8</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_jpeg.o(i._GetU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetU8
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
<LI> gui_jpeg.o(i._GetStuff)
</UL>
<P><STRONG><a name="[582]"></a>_HuffDecode</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_jpeg.o(i._HuffDecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _HuffDecode &rArr; _GetBitsNoMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
</UL>

<P><STRONG><a name="[3c3]"></a>_InitScan</STRONG> (Thumb, 1330 bytes, Stack size 1344 bytes, gui_jpeg.o(i._InitScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = _InitScan &rArr; _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[3bf]"></a>_LoadNextRow</STRONG> (Thumb, 648 bytes, Stack size 136 bytes, gui_jpeg.o(i._LoadNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _LoadNextRow &rArr; _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[3c1]"></a>_ReadMarkers</STRONG> (Thumb, 1056 bytes, Stack size 56 bytes, gui_jpeg.o(i._ReadMarkers))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ReadMarkers &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[d1]"></a>_OnExit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_multibuf.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
</UL>
<P><STRONG><a name="[d2]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[194]"></a>_Color2Index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Color2Index))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>_Color2IndexBulk</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_setalpha.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>_DrawBitmap</STRONG> (Thumb, 1758 bytes, Stack size 128 bytes, gui_setalpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawBitmap &rArr; _GetLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[59b]"></a>_DrawBitmapLine</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitmapLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmapLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19a]"></a>_DrawHLine</STRONG> (Thumb, 178 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>_DrawVLine</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gui_setalpha.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>_FillRect</STRONG> (Thumb, 216 bytes, Stack size 80 bytes, gui_setalpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _FillRect &rArr; _GetLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[1a3]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>_GetDevFunc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_setalpha.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>_GetDevProp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>_GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetIndexMask))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[59a]"></a>_GetLine</STRONG> (Thumb, 174 bytes, Stack size 64 bytes, gui_setalpha.o(i._GetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _GetLine &rArr; LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19d]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[1a4]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>_Index2Color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Index2Color))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>_Index2ColorBulk</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_setalpha.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[5c4]"></a>_MixColors</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_setalpha.o(i._MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[d4]"></a>_OnExit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_setalpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i.GUI_SetAlpha)
</UL>
<P><STRONG><a name="[135]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, gui_setalpha.o(i._ReadRectFromMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._GetLine)
</UL>
<P><STRONG><a name="[1a0]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>_SetPixelIndex</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gui_setalpha.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>_XorPixel</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_setalpha.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[418]"></a>_CreateBuffer</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[416]"></a>_DoColorConversion</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[1a5]"></a>_DrawBitmap</STRONG> (Thumb, 1128 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a6]"></a>_DrawHLine</STRONG> (Thumb, 498 bytes, Stack size 80 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>_DrawVLine</STRONG> (Thumb, 476 bytes, Stack size 112 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>_FillRect</STRONG> (Thumb, 542 bytes, Stack size 120 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[41b]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndexAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetBkIndexAlpha
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[59d]"></a>_GetClipParam</STRONG> (Thumb, 422 bytes, Stack size 32 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[59c]"></a>_GetClipRect</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1af]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1ad]"></a>_GetDevFunc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1ae]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a9]"></a>_GetPixelIndex</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1b0]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[41c]"></a>_ReleaseBuffer</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ReleaseBuffer &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[417]"></a>_SetBitmapAndPosition</STRONG> (Thumb, 1194 bytes, Stack size 192 bytes, gui_sprite.o(i._SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[41a]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 184 bytes, Stack size 64 bytes, gui_sprite.o(i._SetBkIndexBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _SetBkIndexBuffered &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[1ac]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>_SetPixelIndex</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[41d]"></a>_SpriteDraw</STRONG> (Thumb, 676 bytes, Stack size 88 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[413]"></a>_Undraw</STRONG> (Thumb, 306 bytes, Stack size 96 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
</UL>

<P><STRONG><a name="[1ab]"></a>_XorPixel</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1b3]"></a>_Color2IndexBulk</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, guicc_888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[1b1]"></a>_Color2Index_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._Color2Index_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[1b2]"></a>_GetIndexMask_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._GetIndexMask_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>_Index2ColorBulk</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, guicc_888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>_Color2IndexBulk</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[1b5]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[1b6]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[1b8]"></a>_Index2ColorBulk</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[1bc]"></a>_Color2IndexBulk</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_m565.o(i._Color2Index_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1bb]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1bd]"></a>_Index2ColorBulk</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1c1]"></a>_Color2IndexBulk</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, guicc_m888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[1be]"></a>_Color2Index_M888</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guicc_m888.o(i._Color2Index_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[1c0]"></a>_GetIndexMask_M888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m888.o(i._GetIndexMask_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[1c2]"></a>_Index2ColorBulk</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guicc_m888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[1c4]"></a>_SetBkColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[1c3]"></a>_SetColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[1c5]"></a>_SetDrawMode</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[59f]"></a>_DrawBitmap</STRONG> (Thumb, 564 bytes, Stack size 72 bytes, lcd_rle8.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitmap &rArr; LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
</UL>

<P><STRONG><a name="[1c6]"></a>_DrawBitmap_RLE8</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, lcd_rle8.o(i._DrawBitmap_RLE8))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap_RLE8 &rArr; _DrawBitmap &rArr; LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>_GetByte_pPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_rle8.o(i._GetByte_pPixel))
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(i._DrawBitmap_RLE8)
</UL>
<P><STRONG><a name="[11a]"></a>_Draw</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, lcd_rlealpha.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[1c7]"></a>_DrawBitmap_RLEAlpha</STRONG> (Thumb, 538 bytes, Stack size 112 bytes, lcd_rlealpha.o(i._DrawBitmap_RLEAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DrawBitmap_RLEAlpha &rArr; GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>_DrawClip</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, lcd_rlealpha.o(i._DrawClip))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _DrawClip &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[130]"></a>_CopyBuffer</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _CopyBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1c8]"></a>_DrawBitmap</STRONG> (Thumb, 1434 bytes, Stack size 72 bytes, guidrv_lin_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1c9]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawHLine &rArr; _FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1ca]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawVLine &rArr; _FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1cb]"></a>_FillRect</STRONG> (Thumb, 334 bytes, Stack size 40 bytes, guidrv_lin_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d2]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d0]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d1]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1cc]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>_GetPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetPos &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1d3]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12c]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12b]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[133]"></a>_ReadRect</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[128]"></a>_SetAlpha</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _SetAlpha &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12d]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12f]"></a>_SetChroma</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12e]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[132]"></a>_SetDevFunc</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetDevFunc &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1cf]"></a>_SetOrg</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1cd]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._SetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>_SetPos</STRONG> (Thumb, 366 bytes, Stack size 80 bytes, guidrv_lin_32.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = _SetPos &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[125]"></a>_SetSize</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[123]"></a>_SetVRAMAddr</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[124]"></a>_SetVSize</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVSize &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[129]"></a>_SetVis</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[131]"></a>_ShowBuffer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _ShowBuffer &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_Init &rArr; LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1ce]"></a>_XorPixel</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d4]"></a>_DrawBitmap</STRONG> (Thumb, 2076 bytes, Stack size 136 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d5]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d6]"></a>_DrawVLine</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>_FillRect</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1de]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1dc]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1dd]"></a>_GetDevProp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d8]"></a>_GetPixelIndex</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1d9]"></a>_SetPixelIndex</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1da]"></a>_XorPixel</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[3ee]"></a>_FadeDevices</STRONG> (Thumb, 368 bytes, Stack size 104 bytes, guidev_moveandfade.o(i._FadeDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _FadeDevices &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInDevices
</UL>

<P><STRONG><a name="[3fa]"></a>_GetColorHQ</STRONG> (Thumb, 392 bytes, Stack size 128 bytes, guidev_rotate.o(i._GetColorHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetColorHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
</UL>

<P><STRONG><a name="[3f9]"></a>_GetMinMax</STRONG> (Thumb, 194 bytes, Stack size 20 bytes, guidev_rotate.o(i._GetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>

<P><STRONG><a name="[224]"></a>_OnButtonReleased</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[af]"></a>_OnPidStateChange</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, button.o(i._OnPidStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnPidStateChange &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
</UL>
<P><STRONG><a name="[24]"></a>_OnTouchDefault</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[ae]"></a>_OnTouchReactOnLevel</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, button.o(i._OnTouchReactOnLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnTouchReactOnLevel &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
</UL>
<P><STRONG><a name="[27]"></a>_Create</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>_Paint</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[b2]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 266 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__cbClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[2c]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, framewin_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>_GetBorderSize</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, framewin_skin.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>_Paint</STRONG> (Thumb, 270 bytes, Stack size 104 bytes, framewin_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Paint &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[294]"></a>_ManageScrollbars</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, graph.o(i._ManageScrollbars))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[b4]"></a>_InvalidateNewItem</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, graph_data_yt.o(i._InvalidateNewItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _InvalidateNewItem &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[b6]"></a>_OnDelete</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, graph_data_yt.o(i._OnDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _OnDelete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[b5]"></a>_OnPaint</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, graph_data_yt.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _OnPaint &rArr; GUI_DrawGraphEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[b7]"></a>_OnPaint</STRONG> (Thumb, 488 bytes, Stack size 64 bytes, graph_scale.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _OnPaint &rArr; GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_scale.o(i.GRAPH_SCALE_Create)
</UL>
<P><STRONG><a name="[44a]"></a>_HandlePID</STRONG> (Thumb, 916 bytes, Stack size 120 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _HandlePID &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[2f]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>_Paint</STRONG> (Thumb, 282 bytes, Stack size 144 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Paint &rArr; WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[da]"></a>_DrawBitmap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, iconview.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _DrawBitmap &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[dc]"></a>_GetImageSizes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, iconview.o(i._GetImageSizes))
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[5b2]"></a>_GetRelRectFromIndex</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, iconview.o(i._GetRelRectFromIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _GetRelRectFromIndex &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[468]"></a>_SetSel</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, iconview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _SetSel &rArr; _GetRelRectFromIndex &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[4ce]"></a>_ColumnScroll</STRONG> (Thumb, 652 bytes, Stack size 96 bytes, listview.o(i._ColumnScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _ColumnScroll &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4cd]"></a>_MoveSel</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, listview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4cb]"></a>_OnPaint</STRONG> (Thumb, 1434 bytes, Stack size 264 bytes, listview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4d0]"></a>_UpdateScrollPos</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, listview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[f5]"></a>_Free</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, listview_setsort.o(i._Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _Free &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 2]<UL><LI> listview_setsort.o(i.LISTVIEW_EnableSort)
<LI> listview_setsort.o(i.LISTVIEW_SetSort)
</UL>
<P><STRONG><a name="[f6]"></a>_Sort</STRONG> (Thumb, 786 bytes, Stack size 120 bytes, listview_setsort.o(i._Sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _Sort &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Address Reference Count : 2]<UL><LI> listview_setsort.o(i.LISTVIEW_EnableSort)
<LI> listview_setsort.o(i.LISTVIEW_SetSort)
</UL>
<P><STRONG><a name="[32]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>_Paint</STRONG> (Thumb, 336 bytes, Stack size 112 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Paint &rArr; PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[10c]"></a>_CalcPositions</STRONG> (Thumb, 346 bytes, Stack size 120 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[34]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>_Paint</STRONG> (Thumb, 190 bytes, Stack size 112 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[fc]"></a>_DrawBackgroundH</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[f9]"></a>_DrawBackgroundV</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[597]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[fe]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[fb]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[36]"></a>_Create</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, slider_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>_Paint</STRONG> (Thumb, 526 bytes, Stack size 128 bytes, slider_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[511]"></a>_CalcParams</STRONG> (Thumb, 502 bytes, Stack size 152 bytes, treeview.o(i._CalcParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _CalcParams
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[513]"></a>_CollapseItem</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, treeview.o(i._CollapseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[514]"></a>_ExpandItem</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, treeview.o(i._ExpandItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[50e]"></a>_GetLastNodeItem</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, treeview.o(i._GetLastNodeItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetLastNodeItem
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>

<P><STRONG><a name="[517]"></a>_GetNextVisibleItem</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, treeview.o(i._GetNextVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetNextVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[518]"></a>_GetPrevVisibleItem</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[5b3]"></a>_GetVisibility</STRONG> (Thumb, 314 bytes, Stack size 112 bytes, treeview.o(i._GetVisibility))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[512]"></a>_ManageAutoScroll</STRONG> (Thumb, 480 bytes, Stack size 176 bytes, treeview.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[51a]"></a>_MoveSel</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, treeview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
</UL>

<P><STRONG><a name="[50f]"></a>_OnPaint</STRONG> (Thumb, 1664 bytes, Stack size 296 bytes, treeview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[516]"></a>_SetSel</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, treeview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[515]"></a>_UpdateScrollPos</STRONG> (Thumb, 228 bytes, Stack size 72 bytes, treeview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[1e2]"></a>_DrawDown</STRONG> (Thumb, 54 bytes, Stack size 128 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _DrawDown &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1e0]"></a>_DrawUp</STRONG> (Thumb, 54 bytes, Stack size 128 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _DrawUp &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1e1]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[541]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[53e]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[56d]"></a>_Findx0</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[56e]"></a>_Findx1</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[56c]"></a>_Findy1</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[552]"></a>_Invalidate1Abs</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[106]"></a>_OnExit</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[571]"></a>_PaintTransChildren</STRONG> (Thumb, 304 bytes, Stack size 64 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[105]"></a>_cbBackWin</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _cbBackWin &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[104]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Exec)
</UL>
<P><STRONG><a name="[543]"></a>_GetDialogItem</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, wm_lib.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[577]"></a>_AimDestination</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, wm_motion.o(i._AimDestination))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _AimDestination
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[559]"></a>_ExecMotion</STRONG> (Thumb, 2418 bytes, Stack size 216 bytes, wm_motion.o(i._ExecMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
</UL>

<P><STRONG><a name="[5ac]"></a>_GetConfirmation</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, wm_motion.o(i._GetConfirmation))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _GetConfirmation &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[5ab]"></a>_GetContext</STRONG> (Thumb, 264 bytes, Stack size 112 bytes, wm_motion.o(i._GetContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _GetContext &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[122]"></a>_GetMotionTagR</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, wm_motion.o(i._GetMotionTagR))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _GetMotionTagR &rArr; WM_GetWindowRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[11c]"></a>_GetMotionTagXY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_motion.o(i._GetMotionTagXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetMotionTagXY &rArr; GUI_GetTime &rArr; GUI_X_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._ExecMotion)
</UL>
<P><STRONG><a name="[121]"></a>_Motion_AutoWithinParent</STRONG> (Thumb, 502 bytes, Stack size 64 bytes, wm_motion.o(i._Motion_AutoWithinParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _Motion_AutoWithinParent &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[120]"></a>_Motion_ByWindow</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_motion.o(i._Motion_ByWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _Motion_ByWindow &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[5af]"></a>_MoveToNearestSnapPosition</STRONG> (Thumb, 464 bytes, Stack size 40 bytes, wm_motion.o(i._MoveToNearestSnapPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[107]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_motion.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[5ae]"></a>_ProcessMotion</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, wm_motion.o(i._ProcessMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ProcessMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[5ad]"></a>_StopMotionOnHit</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, wm_motion.o(i._StopMotionOnHit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _StopMotionOnHit &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[108]"></a>_cbMotion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_motion.o(i._cbMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = _cbMotion &rArr; _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[11d]"></a>_cbTimer</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_motion.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _cbTimer &rArr; _ExecMotion &rArr; _MoveToNearestSnapPosition &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wm_motion.o(i._ExecMotion)
<LI> wm_motion.o(i._MoveToNearestSnapPosition)
</UL>
<P><STRONG><a name="[1e4]"></a>_MULTIBUF_Begin</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[1e5]"></a>_MULTIBUF_End</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_End &rArr; GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[1e6]"></a>_Color2Index_16</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, guicc_16.o(i._Color2Index_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Color2Index_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[1e8]"></a>_GetIndexMask_16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_16.o(i._GetIndexMask_16))
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[1e7]"></a>_Index2Color_16</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, guicc_16.o(i._Index2Color_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Index2Color_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>_GetCharWrap</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>_GetWordWrap</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[27f]"></a>_DrawArc</STRONG> (Thumb, 842 bytes, Stack size 88 bytes, gui_arc.o(i._DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>

<P><STRONG><a name="[3b]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[be]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[428]"></a>_Link</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[d6]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[1eb]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[1ec]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[1e9]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[1ea]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[58c]"></a>_DispFloatFix</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_valf.o(i._DispFloatFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[383]"></a>_DispFloatMin</STRONG> (Thumb, 476 bytes, Stack size 24 bytes, gui_valf.o(i._DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
</UL>

<P><STRONG><a name="[1ed]"></a>_Color2Index_0</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[1ef]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[1ee]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[1f2]"></a>_Color2IndexBulk</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, guicc_565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[1f0]"></a>_Color2Index_565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_565.o(i._Color2Index_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[1f1]"></a>_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_565.o(i._GetIndexMask_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[1f3]"></a>_Index2ColorBulk</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, guicc_565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>_NextPixel_End</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _NextPixel_End &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[5bc]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, lcd_nextpixelapi.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NextPixel_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[40]"></a>_NextPixel_NextLine</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>_NextPixel_Start</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lcd_nextpixelapi.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[410]"></a>LCD_ReadRectEx</STRONG> (Thumb, 544 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>

<P><STRONG><a name="[1f9]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1f8]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1fa]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1fc]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1fb]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1ff]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[200]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[201]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1fe]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i.WM_BringToTop)
</UL>
<P><STRONG><a name="[570]"></a>_MoveDescendents</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[563]"></a>_Screen2hWin</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[103]"></a>_cbTimer</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; rt_sem_take &rArr; rt_ipc_list_suspend &rArr; rt_thread_suspend &rArr; rt_timer_stop &rArr; _rt_timer_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[10b]"></a>_OnExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_touch.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> wm_touch.o(i.WM__SetMotionCallback)
</UL>
<P><STRONG><a name="[5c7]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>

<P><STRONG><a name="[13e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
